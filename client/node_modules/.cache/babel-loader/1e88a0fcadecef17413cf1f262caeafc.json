{"ast":null,"code":"var common = require('./common');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath'\n  }\n}); // Recursively creates `dir`\n\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir); // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n\n  /* istanbul ignore next */\n\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  } // Base dir exists, no recursion necessary\n\n\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  } // Base dir does not exist, go recursive\n\n\n  mkdirSyncRecursive(baseDir); // Base dir created, can create dir\n\n  fs.mkdirSync(dir, parseInt('0777', 8));\n} //@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\n\n\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  } // if it's array leave it as it is\n\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, {\n          continue: true\n        });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', {\n          continue: true\n        });\n      }\n\n      return; // skip dir\n    } catch (e) {} // do nothing\n    // Base dir does not exist, and no -p option given\n\n\n    var baseDir = path.dirname(dir);\n\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, {\n        continue: true\n      });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n\n      common.error('cannot create directory ' + dir + ': ' + reason, {\n        continue: true\n      });\n    }\n  });\n  return '';\n} // mkdir\n\n\nmodule.exports = _mkdir;","map":{"version":3,"names":["common","require","fs","path","register","_mkdir","cmdOptions","mkdirSyncRecursive","dir","baseDir","dirname","error","existsSync","mkdirSync","parseInt","options","dirs","slice","call","arguments","forEach","stat","statNoFollowLinks","fullpath","continue","isFile","e","resolve","reason","code","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/shelljs/src/mkdir.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath',\n  },\n});\n\n// Recursively creates `dir`\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n  /* istanbul ignore next */\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  }\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  }\n  // if it's array leave it as it is\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, { continue: true });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', { continue: true });\n      }\n      return; // skip dir\n    } catch (e) {\n      // do nothing\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, { continue: true });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n      common.error('cannot create directory ' + dir + ': ' + reason, { continue: true });\n    }\n  });\n  return '';\n} // mkdir\nmodule.exports = _mkdir;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"const {\n  head\n} = require('../lib/git.js'); // 1.0: https://semaphoreci.com/docs/available-environment-variables.html\n// 2.0: https://docs.semaphoreci.com/article/12-environment-variables\n\n\nmodule.exports = {\n  detect({\n    env\n  }) {\n    return Boolean(env.SEMAPHORE);\n  },\n\n  configuration({\n    env,\n    cwd\n  }) {\n    const pr = env.SEMAPHORE_GIT_PR_NUMBER || env.PULL_REQUEST_NUMBER;\n    const isPr = Boolean(pr);\n    return {\n      name: 'Semaphore',\n      service: 'semaphore',\n      commit: env.SEMAPHORE_GIT_SHA || head({\n        env,\n        cwd\n      }),\n      tag: env.SEMAPHORE_GIT_TAG_NAME,\n      build: env.SEMAPHORE_JOB_ID || env.SEMAPHORE_BUILD_NUMBER,\n      branch: env.SEMAPHORE_GIT_BRANCH || (isPr ? undefined : env.BRANCH_NAME),\n      pr,\n      isPr,\n      prBranch: env.SEMAPHORE_GIT_PR_BRANCH || (isPr ? env.BRANCH_NAME : undefined),\n      slug: env.SEMAPHORE_GIT_REPO_SLUG || env.SEMAPHORE_REPO_SLUG,\n      root: env.SEMAPHORE_GIT_DIR || env.SEMAPHORE_PROJECT_DIR\n    };\n  }\n\n};","map":{"version":3,"names":["head","require","module","exports","detect","env","Boolean","SEMAPHORE","configuration","cwd","pr","SEMAPHORE_GIT_PR_NUMBER","PULL_REQUEST_NUMBER","isPr","name","service","commit","SEMAPHORE_GIT_SHA","tag","SEMAPHORE_GIT_TAG_NAME","build","SEMAPHORE_JOB_ID","SEMAPHORE_BUILD_NUMBER","branch","SEMAPHORE_GIT_BRANCH","undefined","BRANCH_NAME","prBranch","SEMAPHORE_GIT_PR_BRANCH","slug","SEMAPHORE_GIT_REPO_SLUG","SEMAPHORE_REPO_SLUG","root","SEMAPHORE_GIT_DIR","SEMAPHORE_PROJECT_DIR"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/env-ci/services/semaphore.js"],"sourcesContent":["const {head} = require('../lib/git.js');\n\n// 1.0: https://semaphoreci.com/docs/available-environment-variables.html\n// 2.0: https://docs.semaphoreci.com/article/12-environment-variables\n\nmodule.exports = {\n  detect({env}) {\n    return Boolean(env.SEMAPHORE);\n  },\n  configuration({env, cwd}) {\n    const pr = env.SEMAPHORE_GIT_PR_NUMBER || env.PULL_REQUEST_NUMBER;\n    const isPr = Boolean(pr);\n\n    return {\n      name: 'Semaphore',\n      service: 'semaphore',\n      commit: env.SEMAPHORE_GIT_SHA || head({env, cwd}),\n      tag: env.SEMAPHORE_GIT_TAG_NAME,\n      build: env.SEMAPHORE_JOB_ID || env.SEMAPHORE_BUILD_NUMBER,\n      branch: env.SEMAPHORE_GIT_BRANCH || (isPr ? undefined : env.BRANCH_NAME),\n      pr,\n      isPr,\n      prBranch: env.SEMAPHORE_GIT_PR_BRANCH || (isPr ? env.BRANCH_NAME : undefined),\n      slug: env.SEMAPHORE_GIT_REPO_SLUG || env.SEMAPHORE_REPO_SLUG,\n      root: env.SEMAPHORE_GIT_DIR || env.SEMAPHORE_PROJECT_DIR,\n    };\n  },\n};\n"],"mappings":"AAAA,MAAM;EAACA;AAAD,IAASC,OAAO,CAAC,eAAD,CAAtB,C,CAEA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,MAAM,CAAC;IAACC;EAAD,CAAD,EAAQ;IACZ,OAAOC,OAAO,CAACD,GAAG,CAACE,SAAL,CAAd;EACD,CAHc;;EAIfC,aAAa,CAAC;IAACH,GAAD;IAAMI;EAAN,CAAD,EAAa;IACxB,MAAMC,EAAE,GAAGL,GAAG,CAACM,uBAAJ,IAA+BN,GAAG,CAACO,mBAA9C;IACA,MAAMC,IAAI,GAAGP,OAAO,CAACI,EAAD,CAApB;IAEA,OAAO;MACLI,IAAI,EAAE,WADD;MAELC,OAAO,EAAE,WAFJ;MAGLC,MAAM,EAAEX,GAAG,CAACY,iBAAJ,IAAyBjB,IAAI,CAAC;QAACK,GAAD;QAAMI;MAAN,CAAD,CAHhC;MAILS,GAAG,EAAEb,GAAG,CAACc,sBAJJ;MAKLC,KAAK,EAAEf,GAAG,CAACgB,gBAAJ,IAAwBhB,GAAG,CAACiB,sBAL9B;MAMLC,MAAM,EAAElB,GAAG,CAACmB,oBAAJ,KAA6BX,IAAI,GAAGY,SAAH,GAAepB,GAAG,CAACqB,WAApD,CANH;MAOLhB,EAPK;MAQLG,IARK;MASLc,QAAQ,EAAEtB,GAAG,CAACuB,uBAAJ,KAAgCf,IAAI,GAAGR,GAAG,CAACqB,WAAP,GAAqBD,SAAzD,CATL;MAULI,IAAI,EAAExB,GAAG,CAACyB,uBAAJ,IAA+BzB,GAAG,CAAC0B,mBAVpC;MAWLC,IAAI,EAAE3B,GAAG,CAAC4B,iBAAJ,IAAyB5B,GAAG,CAAC6B;IAX9B,CAAP;EAaD;;AArBc,CAAjB"},"metadata":{},"sourceType":"script"}
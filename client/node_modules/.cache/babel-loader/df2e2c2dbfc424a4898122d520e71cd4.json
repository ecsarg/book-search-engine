{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = _interopRequireDefault(require(\"util.promisify\"));\n\nvar _child_process = _interopRequireDefault(require(\"child_process\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst execFile = (0, _util.default)(_child_process.default.execFile);\n/**\n * Returns a git diff given a path to the repo, a commit,\n * an optional second commit, and an optional file.\n *\n * Returns the diff as a string.\n */\n\nconst gitDiff = (pathToRepo, commit1, commit2 = \"\", file = \"\") => {\n  const args = [\"diff\", commit1];\n  if (commit2) args.push(commit2);\n  args.push(\"--\");\n  if (file) args.push(file);\n  return execFile(\"git\", args, {\n    cwd: pathToRepo,\n    encoding: \"utf8\",\n    maxBuffer: 1024 * 1000\n  }).then(output => output.stdout);\n};\n\nvar _default = gitDiff;\nexports.default = _default;","map":{"version":3,"sources":["../src/git_diff.ts"],"names":["execFile","childProcess","gitDiff","commit2","file","args","cwd","encoding","maxBuffer","output"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;AAEA,MAAMA,QAAQ,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAUC,cAAAA,CAAAA,OAAAA,CAA3B,QAAiB,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,CAAA,UAAA,EAAA,OAAA,EAAsBC,OAAO,GAA7B,EAAA,EAAoCC,IAAI,GAAxC,EAAA,KAAkD;EAChE,MAAMC,IAAI,GAAG,CAAA,MAAA,EAAb,OAAa,CAAb;EAEA,IAAA,OAAA,EAAaA,IAAI,CAAJA,IAAAA,CAAAA,OAAAA;EAEbA,IAAI,CAAJA,IAAAA,CAAAA,IAAAA;EAEA,IAAA,IAAA,EAAUA,IAAI,CAAJA,IAAAA,CAAAA,IAAAA;EAEV,OAAO,QAAQ,CAAA,KAAA,EAAA,IAAA,EAAc;IAC3BC,GAAG,EADwB,UAAA;IAE3BC,QAAQ,EAFmB,MAAA;IAG3BC,SAAS,EAAE,OAAO;EAHS,CAAd,CAAR,CAAA,IAAA,CAIEC,MAAD,IAAYA,MAAM,CAJ1B,MAAO,CAAP;AATF,CAAA;;eAgBeP,O","sourcesContent":["import promisify from \"util.promisify\";\nimport childProcess from \"child_process\";\n\nconst execFile = promisify(childProcess.execFile);\n\n/**\n * Returns a git diff given a path to the repo, a commit,\n * an optional second commit, and an optional file.\n *\n * Returns the diff as a string.\n */\nconst gitDiff = (pathToRepo, commit1, commit2 = \"\", file = \"\") => {\n  const args = [\"diff\", commit1];\n\n  if (commit2) args.push(commit2);\n\n  args.push(\"--\");\n\n  if (file) args.push(file);\n\n  return execFile(\"git\", args, {\n    cwd: pathToRepo,\n    encoding: \"utf8\",\n    maxBuffer: 1024 * 1000,\n  }).then((output) => output.stdout);\n};\n\nexport default gitDiff;\n"]},"metadata":{},"sourceType":"script"}
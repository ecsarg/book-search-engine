{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _detectNode = _interopRequireDefault(require(\"detect-node\"));\n\nvar _semverCompare = _interopRequireDefault(require(\"semver-compare\"));\n\nvar _package = require(\"../../package.json\");\n\nvar _createNodeWriter = _interopRequireDefault(require(\"./createNodeWriter\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // eslint-disable-next-line flowtype/no-weak-types\n\n\nconst createRoarrInititialGlobalState = currentState => {\n  const versions = (currentState.versions || []).concat();\n  versions.sort(_semverCompare.default);\n  const currentIsLatestVersion = !versions.length || (0, _semverCompare.default)(_package.version, versions[versions.length - 1]) === 1;\n\n  if (!versions.includes(_package.version)) {\n    versions.push(_package.version);\n  }\n\n  versions.sort(_semverCompare.default);\n\n  let newState = _objectSpread(_objectSpread({\n    sequence: 0\n  }, currentState), {}, {\n    versions\n  });\n\n  if (_detectNode.default) {\n    if (currentIsLatestVersion || !newState.write) {\n      newState = _objectSpread(_objectSpread({}, newState), (0, _createNodeWriter.default)());\n    }\n  }\n\n  return newState;\n};\n\nvar _default = createRoarrInititialGlobalState;\nexports.default = _default;","map":{"version":3,"sources":["../../src/factories/createRoarrInititialGlobalState.js"],"names":["currentState","versions","cmp","currentIsLatestVersion","version","newState","sequence","environmentIsNode"],"mappings":";;;;;;;AAEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAMA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;;;wCACgBA,Y,IAA+C;EAC7D,MAAMC,QAAQ,GAAG,CAACD,YAAY,CAAZA,QAAAA,IAAD,EAAA,EAAjB,MAAiB,EAAjB;EAEAC,QAAQ,CAARA,IAAAA,CAAcC,cAAAA,CAAdD,OAAAA;EAEA,MAAME,sBAAsB,GAAG,CAACF,QAAQ,CAAT,MAAA,IAAoB,CAAA,GAAA,cAAA,CAAA,OAAA,EAAIG,QAAAA,CAAJ,OAAA,EAAaH,QAAQ,CAACA,QAAQ,CAARA,MAAAA,GAAtB,CAAqB,CAArB,MAAnD,CAAA;;EAEA,IAAI,CAACA,QAAQ,CAARA,QAAAA,CAAkBG,QAAAA,CAAvB,OAAKH,CAAL,EAAiC;IAC/BA,QAAQ,CAARA,IAAAA,CAAcG,QAAAA,CAAdH,OAAAA;EACD;;EAEDA,QAAQ,CAARA,IAAAA,CAAcC,cAAAA,CAAdD,OAAAA;;EAEA,IAAII,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA;IACVC,QAAQ,EAAE;EADA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA;IAGVL;EAHU,CAAA,CAAZ;;EAMA,IAAIM,WAAAA,CAAJ,OAAA,EAAuB;IACrB,IAAIJ,sBAAsB,IAAI,CAACE,QAAQ,CAAvC,KAAA,EAA+C;MAC7CA,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAEH,CAAA,GAAA,iBAAA,CAFLA,OAEK,GAFG,CAARA;IAID;EACF;;EAED,OAAA,QAAA","sourcesContent":["// @flow\n\nimport environmentIsNode from 'detect-node';\nimport cmp from 'semver-compare';\nimport {\n  version,\n} from '../../package.json';\nimport type {\n  RoarrGlobalStateType,\n} from '../types';\nimport createNodeWriter from './createNodeWriter';\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport default (currentState: Object): RoarrGlobalStateType => {\n  const versions = (currentState.versions || []).concat();\n\n  versions.sort(cmp);\n\n  const currentIsLatestVersion = !versions.length || cmp(version, versions[versions.length - 1]) === 1;\n\n  if (!versions.includes(version)) {\n    versions.push(version);\n  }\n\n  versions.sort(cmp);\n\n  let newState = {\n    sequence: 0,\n    ...currentState,\n    versions,\n  };\n\n  if (environmentIsNode) {\n    if (currentIsLatestVersion || !newState.write) {\n      newState = {\n        ...newState,\n        ...createNodeWriter(),\n      };\n    }\n  }\n\n  return newState;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var common = require('./common');\n\nvar fs = require('fs'); // add c spaces to the left of str\n\n\nfunction lpad(c, str) {\n  var res = '' + str;\n\n  if (res.length < c) {\n    res = Array(c - res.length + 1).join(' ') + res;\n  }\n\n  return res;\n}\n\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates'\n  }\n}); //@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\n\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!pipe) {\n    if (!input) common.error('no input given');\n\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).trimRight().split('\\n');\n\n  var compare = function (a, b) {\n    return options.ignoreCase ? a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) : a.localeCompare(b);\n  };\n\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{\n        count: 1,\n        ln: e\n      }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{\n        count: res[0].count + 1,\n        ln: e\n      }].concat(res.slice(1));\n    } else {\n      return [{\n        count: 1,\n        ln: e\n      }].concat(res);\n    }\n  }, []).filter(function (obj) {\n    // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n    // Are we tracking the counts of each line?\n    return (options.count ? lpad(7, obj.count) + ' ' : '') + obj.ln;\n  }).join('\\n') + '\\n';\n\n  if (output) {\n    new common.ShellString(uniqed).to(output); // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n\n    return '';\n  } else {\n    return uniqed;\n  }\n}\n\nmodule.exports = _uniq;","map":{"version":3,"names":["common","require","fs","lpad","c","str","res","length","Array","join","register","_uniq","canReceivePipe","cmdOptions","options","input","output","pipe","readFromPipe","error","existsSync","statFollowLinks","isDirectory","lines","readFileSync","trimRight","split","compare","a","b","ignoreCase","toLocaleLowerCase","localeCompare","uniqed","reduceRight","e","count","ln","concat","slice","filter","obj","duplicates","map","ShellString","to","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/shelljs/src/uniq.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\n// add c spaces to the left of str\nfunction lpad(c, str) {\n  var res = '' + str;\n  if (res.length < c) {\n    res = Array((c - res.length) + 1).join(' ') + res;\n  }\n  return res;\n}\n\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates',\n  },\n});\n\n//@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!pipe) {\n    if (!input) common.error('no input given');\n\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).\n              trimRight().\n              split('\\n');\n\n  var compare = function (a, b) {\n    return options.ignoreCase ?\n           a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) :\n           a.localeCompare(b);\n  };\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{ count: 1, ln: e }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{ count: res[0].count + 1, ln: e }].concat(res.slice(1));\n    } else {\n      return [{ count: 1, ln: e }].concat(res);\n    }\n  }, []).filter(function (obj) {\n                 // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n                 // Are we tracking the counts of each line?\n    return (options.count ? (lpad(7, obj.count) + ' ') : '') + obj.ln;\n  }).join('\\n') + '\\n';\n\n  if (output) {\n    (new common.ShellString(uniqed)).to(output);\n    // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n    return '';\n  } else {\n    return uniqed;\n  }\n}\n\nmodule.exports = _uniq;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"const fs = require('fs'); // In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\n\n\nfunction internalModuleReadJSON(path) {\n  let string;\n\n  try {\n    string = fs.readFileSync(path, 'utf8');\n  } catch (e) {\n    if (e.code === 'ENOENT') return [];\n    throw e;\n  } // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n\n\n  const containsKeys = true;\n  return [string, containsKeys];\n}\n\nmodule.exports = {\n  internalModuleReadJSON\n};","map":{"version":3,"names":["fs","require","internalModuleReadJSON","path","string","readFileSync","e","code","containsKeys","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/ts-node/dist-raw/node-internal-fs.js"],"sourcesContent":["const fs = require('fs');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\nfunction internalModuleReadJSON(path) {\n  let string\n  try {\n    string = fs.readFileSync(path, 'utf8')\n  } catch (e) {\n    if (e.code === 'ENOENT') return []\n    throw e\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true\n  return [string, containsKeys]\n}\n\nmodule.exports = {\n  internalModuleReadJSON\n};\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB,C,CAEA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;EACpC,IAAIC,MAAJ;;EACA,IAAI;IACFA,MAAM,GAAGJ,EAAE,CAACK,YAAH,CAAgBF,IAAhB,EAAsB,MAAtB,CAAT;EACD,CAFD,CAEE,OAAOG,CAAP,EAAU;IACV,IAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB,OAAO,EAAP;IACzB,MAAMD,CAAN;EACD,CAPmC,CAQpC;EACA;EACA;;;EACA,MAAME,YAAY,GAAG,IAArB;EACA,OAAO,CAACJ,MAAD,EAASI,YAAT,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EACfR;AADe,CAAjB"},"metadata":{},"sourceType":"script"}
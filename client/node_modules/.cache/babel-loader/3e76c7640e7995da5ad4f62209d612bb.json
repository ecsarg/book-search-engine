{"ast":null,"code":"\"use strict\";\n/**\n * protocols\n * Returns the protocols of an input url.\n *\n * @name protocols\n * @function\n * @param {String|URL} input The input url (string or `URL` instance)\n * @param {Boolean|Number} first If `true`, the first protocol will be returned. If number, it will represent the zero-based index of the protocols array.\n * @return {Array|String} The array of protocols or the specified protocol.\n */\n\nmodule.exports = function protocols(input, first) {\n  if (first === true) {\n    first = 0;\n  }\n\n  var prots = \"\";\n\n  if (typeof input === \"string\") {\n    try {\n      prots = new URL(input).protocol;\n    } catch (e) {}\n  } else if (input && input.constructor === URL) {\n    prots = input.protocol;\n  }\n\n  var splits = prots.split(/\\:|\\+/).filter(Boolean);\n\n  if (typeof first === \"number\") {\n    return splits[first];\n  }\n\n  return splits;\n};","map":{"version":3,"names":["module","exports","protocols","input","first","prots","URL","protocol","e","constructor","splits","split","filter","Boolean"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/protocols/lib/index.js"],"sourcesContent":["\"use strict\";\n\n/**\n * protocols\n * Returns the protocols of an input url.\n *\n * @name protocols\n * @function\n * @param {String|URL} input The input url (string or `URL` instance)\n * @param {Boolean|Number} first If `true`, the first protocol will be returned. If number, it will represent the zero-based index of the protocols array.\n * @return {Array|String} The array of protocols or the specified protocol.\n */\nmodule.exports = function protocols(input, first) {\n\n    if (first === true) {\n        first = 0;\n    }\n\n    var prots = \"\";\n    if (typeof input === \"string\") {\n        try {\n            prots = new URL(input).protocol;\n        } catch (e) {}\n    } else if (input && input.constructor === URL) {\n        prots = input.protocol;\n    }\n\n    var splits = prots.split(/\\:|\\+/).filter(Boolean);\n\n    if (typeof first === \"number\") {\n        return splits[first];\n    }\n\n    return splits;\n};"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;EAE9C,IAAIA,KAAK,KAAK,IAAd,EAAoB;IAChBA,KAAK,GAAG,CAAR;EACH;;EAED,IAAIC,KAAK,GAAG,EAAZ;;EACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;IAC3B,IAAI;MACAE,KAAK,GAAG,IAAIC,GAAJ,CAAQH,KAAR,EAAeI,QAAvB;IACH,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;EACjB,CAJD,MAIO,IAAIL,KAAK,IAAIA,KAAK,CAACM,WAAN,KAAsBH,GAAnC,EAAwC;IAC3CD,KAAK,GAAGF,KAAK,CAACI,QAAd;EACH;;EAED,IAAIG,MAAM,GAAGL,KAAK,CAACM,KAAN,CAAY,OAAZ,EAAqBC,MAArB,CAA4BC,OAA5B,CAAb;;EAEA,IAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;IAC3B,OAAOM,MAAM,CAACN,KAAD,CAAb;EACH;;EAED,OAAOM,MAAP;AACH,CAtBD"},"metadata":{},"sourceType":"script"}
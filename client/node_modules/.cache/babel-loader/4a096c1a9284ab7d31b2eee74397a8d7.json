{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst path = require(\"path\");\n\nconst semver = require(\"semver\");\n\nfunction checkCWD() {\n  try {\n    process.cwd();\n  } catch (error) {\n    if (error.code === 'ENOENT') {\n      process.stderr.write('WARNING: current directory does not exist\\n');\n    }\n  }\n}\n\nfunction checkNodeVersion() {\n  const root = path.join(__dirname, '..');\n\n  const pjson = require(path.join(root, 'package.json'));\n\n  if (!semver.satisfies(process.versions.node, pjson.engines.node)) {\n    process.stderr.write(`WARNING\\nWARNING Node version must be ${pjson.engines.node} to use this CLI\\nWARNING Current node version: ${process.versions.node}\\nWARNING\\n`);\n  }\n}\n\ncheckCWD();\ncheckNodeVersion();\n\nconst command_1 = require(\"./command\");\n\nexports.Command = command_1.default;\n\nconst flags = require(\"./flags\");\n\nexports.flags = flags;\n\nvar main_1 = require(\"./main\");\n\nexports.run = main_1.run;\nexports.Main = main_1.Main;\nexports.default = command_1.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","path","require","semver","checkCWD","process","cwd","error","code","stderr","write","checkNodeVersion","root","join","__dirname","pjson","satisfies","versions","node","engines","command_1","Command","default","flags","main_1","run","Main"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/@oclif/command/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst semver = require(\"semver\");\nfunction checkCWD() {\n    try {\n        process.cwd();\n    }\n    catch (error) {\n        if (error.code === 'ENOENT') {\n            process.stderr.write('WARNING: current directory does not exist\\n');\n        }\n    }\n}\nfunction checkNodeVersion() {\n    const root = path.join(__dirname, '..');\n    const pjson = require(path.join(root, 'package.json'));\n    if (!semver.satisfies(process.versions.node, pjson.engines.node)) {\n        process.stderr.write(`WARNING\\nWARNING Node version must be ${pjson.engines.node} to use this CLI\\nWARNING Current node version: ${process.versions.node}\\nWARNING\\n`);\n    }\n}\ncheckCWD();\ncheckNodeVersion();\nconst command_1 = require(\"./command\");\nexports.Command = command_1.default;\nconst flags = require(\"./flags\");\nexports.flags = flags;\nvar main_1 = require(\"./main\");\nexports.run = main_1.run;\nexports.Main = main_1.Main;\nexports.default = command_1.default;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASE,QAAT,GAAoB;EAChB,IAAI;IACAC,OAAO,CAACC,GAAR;EACH,CAFD,CAGA,OAAOC,KAAP,EAAc;IACV,IAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;MACzBH,OAAO,CAACI,MAAR,CAAeC,KAAf,CAAqB,6CAArB;IACH;EACJ;AACJ;;AACD,SAASC,gBAAT,GAA4B;EACxB,MAAMC,IAAI,GAAGX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAb;;EACA,MAAMC,KAAK,GAAGb,OAAO,CAACD,IAAI,CAACY,IAAL,CAAUD,IAAV,EAAgB,cAAhB,CAAD,CAArB;;EACA,IAAI,CAACT,MAAM,CAACa,SAAP,CAAiBX,OAAO,CAACY,QAAR,CAAiBC,IAAlC,EAAwCH,KAAK,CAACI,OAAN,CAAcD,IAAtD,CAAL,EAAkE;IAC9Db,OAAO,CAACI,MAAR,CAAeC,KAAf,CAAsB,yCAAwCK,KAAK,CAACI,OAAN,CAAcD,IAAK,mDAAkDb,OAAO,CAACY,QAAR,CAAiBC,IAAK,aAAzJ;EACH;AACJ;;AACDd,QAAQ;AACRO,gBAAgB;;AAChB,MAAMS,SAAS,GAAGlB,OAAO,CAAC,WAAD,CAAzB;;AACAH,OAAO,CAACsB,OAAR,GAAkBD,SAAS,CAACE,OAA5B;;AACA,MAAMC,KAAK,GAAGrB,OAAO,CAAC,SAAD,CAArB;;AACAH,OAAO,CAACwB,KAAR,GAAgBA,KAAhB;;AACA,IAAIC,MAAM,GAAGtB,OAAO,CAAC,QAAD,CAApB;;AACAH,OAAO,CAAC0B,GAAR,GAAcD,MAAM,CAACC,GAArB;AACA1B,OAAO,CAAC2B,IAAR,GAAeF,MAAM,CAACE,IAAtB;AACA3B,OAAO,CAACuB,OAAR,GAAkBF,SAAS,CAACE,OAA5B"},"metadata":{},"sourceType":"script"}
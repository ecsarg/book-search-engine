{"ast":null,"code":"'use strict';\n\nvar sliceAnsi = require('slice-ansi');\n\nvar stringWidth = require('string-width');\n\nmodule.exports = function (input, columns, options) {\n  options = options || {};\n  var position = options.position || 'end';\n  var ellipsis = '…';\n\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected `input` to be a string, got ' + typeof input);\n  }\n\n  if (typeof columns !== 'number') {\n    throw new TypeError('Expected `columns` to be a number, got ' + typeof columns);\n  }\n\n  if (columns < 1) {\n    return '';\n  }\n\n  if (columns === 1) {\n    return ellipsis;\n  }\n\n  var length = stringWidth(input);\n\n  if (length <= columns) {\n    return input;\n  }\n\n  if (position === 'start') {\n    return ellipsis + sliceAnsi(input, length - columns + 1, length);\n  } else if (position === 'middle') {\n    var half = Math.floor(columns / 2);\n    return sliceAnsi(input, 0, half) + ellipsis + sliceAnsi(input, length - (columns - half) + 1, length);\n  } else if (position === 'end') {\n    return sliceAnsi(input, 0, columns - 1) + ellipsis;\n  }\n\n  throw new Error('Expected `options.position` to be either `start`, `middle` or `end`, got ' + position);\n};","map":{"version":3,"names":["sliceAnsi","require","stringWidth","module","exports","input","columns","options","position","ellipsis","TypeError","length","half","Math","floor","Error"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/cli-truncate/index.js"],"sourcesContent":["'use strict';\nvar sliceAnsi = require('slice-ansi');\nvar stringWidth = require('string-width');\n\nmodule.exports = function (input, columns, options) {\n\toptions = options || {};\n\n\tvar position = options.position || 'end';\n\tvar ellipsis = '…';\n\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError('Expected `input` to be a string, got ' + typeof input);\n\t}\n\n\tif (typeof columns !== 'number') {\n\t\tthrow new TypeError('Expected `columns` to be a number, got ' + typeof columns);\n\t}\n\n\tif (columns < 1) {\n\t\treturn '';\n\t}\n\n\tif (columns === 1) {\n\t\treturn ellipsis;\n\t}\n\n\tvar length = stringWidth(input);\n\n\tif (length <= columns) {\n\t\treturn input;\n\t}\n\n\tif (position === 'start') {\n\t\treturn ellipsis + sliceAnsi(input, length - columns + 1, length);\n\t} else if (position === 'middle') {\n\t\tvar half = Math.floor(columns / 2);\n\t\treturn sliceAnsi(input, 0, half) + ellipsis + sliceAnsi(input, length - (columns - half) + 1, length);\n\t} else if (position === 'end') {\n\t\treturn sliceAnsi(input, 0, columns - 1) + ellipsis;\n\t}\n\n\tthrow new Error('Expected `options.position` to be either `start`, `middle` or `end`, got ' + position);\n};\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;EACnDA,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEA,IAAIC,QAAQ,GAAGD,OAAO,CAACC,QAAR,IAAoB,KAAnC;EACA,IAAIC,QAAQ,GAAG,GAAf;;EAEA,IAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAIK,SAAJ,CAAc,0CAA0C,OAAOL,KAA/D,CAAN;EACA;;EAED,IAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;IAChC,MAAM,IAAII,SAAJ,CAAc,4CAA4C,OAAOJ,OAAjE,CAAN;EACA;;EAED,IAAIA,OAAO,GAAG,CAAd,EAAiB;IAChB,OAAO,EAAP;EACA;;EAED,IAAIA,OAAO,KAAK,CAAhB,EAAmB;IAClB,OAAOG,QAAP;EACA;;EAED,IAAIE,MAAM,GAAGT,WAAW,CAACG,KAAD,CAAxB;;EAEA,IAAIM,MAAM,IAAIL,OAAd,EAAuB;IACtB,OAAOD,KAAP;EACA;;EAED,IAAIG,QAAQ,KAAK,OAAjB,EAA0B;IACzB,OAAOC,QAAQ,GAAGT,SAAS,CAACK,KAAD,EAAQM,MAAM,GAAGL,OAAT,GAAmB,CAA3B,EAA8BK,MAA9B,CAA3B;EACA,CAFD,MAEO,IAAIH,QAAQ,KAAK,QAAjB,EAA2B;IACjC,IAAII,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,GAAG,CAArB,CAAX;IACA,OAAON,SAAS,CAACK,KAAD,EAAQ,CAAR,EAAWO,IAAX,CAAT,GAA4BH,QAA5B,GAAuCT,SAAS,CAACK,KAAD,EAAQM,MAAM,IAAIL,OAAO,GAAGM,IAAd,CAAN,GAA4B,CAApC,EAAuCD,MAAvC,CAAvD;EACA,CAHM,MAGA,IAAIH,QAAQ,KAAK,KAAjB,EAAwB;IAC9B,OAAOR,SAAS,CAACK,KAAD,EAAQ,CAAR,EAAWC,OAAO,GAAG,CAArB,CAAT,GAAmCG,QAA1C;EACA;;EAED,MAAM,IAAIM,KAAJ,CAAU,8EAA8EP,QAAxF,CAAN;AACA,CAtCD"},"metadata":{},"sourceType":"script"}
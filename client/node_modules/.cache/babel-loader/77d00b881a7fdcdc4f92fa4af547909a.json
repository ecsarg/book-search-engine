{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OclifLoadingHandler = void 0;\n\nclass OclifLoadingHandler {\n  constructor(command) {\n    this.command = command;\n  }\n\n  async handle(message, value) {\n    try {\n      const ret = await value;\n      return ret;\n    } catch (e) {\n      this.showError(`Error in \"${message}\": ${e}`);\n      throw e;\n    }\n  }\n\n  handleSync(message, value) {\n    try {\n      const ret = value();\n      return ret;\n    } catch (e) {\n      this.showError(`Error in \"${message}\": ${e}`);\n      throw e;\n    }\n  }\n\n  showError(message) {\n    this.command.error(message);\n  }\n\n}\n\nexports.OclifLoadingHandler = OclifLoadingHandler;","map":{"version":3,"sources":["../src/OclifLoadingHandler.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAa,mBAAb,CAAgC;EAC9B,WAAA,CAAoB,OAApB,EAAoC;IAAhB,KAAA,OAAA,GAAA,OAAA;EAAoB;;EAC5B,MAAN,MAAM,CAAI,OAAJ,EAAqB,KAArB,EAAsC;IAEhD,IAAI;MACF,MAAM,GAAG,GAAG,MAAM,KAAlB;MACA,OAAO,GAAP;IACD,CAHD,CAGE,OAAO,CAAP,EAAU;MACV,KAAK,SAAL,CAAe,aAAa,OAAO,MAAM,CAAC,EAA1C;MACA,MAAM,CAAN;IACD;EACF;;EACD,UAAU,CAAI,OAAJ,EAAqB,KAArB,EAAmC;IAE3C,IAAI;MACF,MAAM,GAAG,GAAG,KAAK,EAAjB;MACA,OAAO,GAAP;IACD,CAHD,CAGE,OAAO,CAAP,EAAU;MACV,KAAK,SAAL,CAAe,aAAa,OAAO,MAAM,CAAC,EAA1C;MACA,MAAM,CAAN;IACD;EACF;;EACD,SAAS,CAAC,OAAD,EAAgB;IACvB,KAAK,OAAL,CAAa,KAAb,CAAmB,OAAnB;EACD;;AAxB6B;;AAAhC,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OclifLoadingHandler = void 0;\nclass OclifLoadingHandler {\n    constructor(command) {\n        this.command = command;\n    }\n    async handle(message, value) {\n        try {\n            const ret = await value;\n            return ret;\n        }\n        catch (e) {\n            this.showError(`Error in \"${message}\": ${e}`);\n            throw e;\n        }\n    }\n    handleSync(message, value) {\n        try {\n            const ret = value();\n            return ret;\n        }\n        catch (e) {\n            this.showError(`Error in \"${message}\": ${e}`);\n            throw e;\n        }\n    }\n    showError(message) {\n        this.command.error(message);\n    }\n}\nexports.OclifLoadingHandler = OclifLoadingHandler;\n//# sourceMappingURL=OclifLoadingHandler.js.map"]},"metadata":{},"sourceType":"script"}
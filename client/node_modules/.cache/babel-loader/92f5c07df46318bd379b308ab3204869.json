{"ast":null,"code":"\"use strict\"; // tslint:disable interface-over-type-literal\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultFlags = exports.string = exports.option = exports.integer = exports.boolean = exports.build = void 0;\n\nfunction build(defaults) {\n  return (options = {}) => {\n    return Object.assign(Object.assign(Object.assign({\n      parse: (i, _) => i\n    }, defaults), options), {\n      input: [],\n      multiple: Boolean(options.multiple),\n      type: 'option'\n    });\n  };\n}\n\nexports.build = build;\n\nfunction boolean(options = {}) {\n  return Object.assign(Object.assign({\n    parse: (b, _) => b\n  }, options), {\n    allowNo: Boolean(options.allowNo),\n    type: 'boolean'\n  });\n}\n\nexports.boolean = boolean;\nexports.integer = build({\n  parse: input => {\n    if (!/^-?\\d+$/.test(input)) throw new Error(`Expected an integer but received: ${input}`);\n    return parseInt(input, 10);\n  }\n});\n\nfunction option(options) {\n  return build(options)();\n}\n\nexports.option = option;\nconst stringFlag = build({});\nexports.string = stringFlag;\nexports.defaultFlags = {\n  color: boolean({\n    allowNo: true\n  })\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultFlags","string","option","integer","boolean","build","defaults","options","assign","parse","i","_","input","multiple","Boolean","type","b","allowNo","test","Error","parseInt","stringFlag","color"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/@oclif/parser/lib/flags.js"],"sourcesContent":["\"use strict\";\n// tslint:disable interface-over-type-literal\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultFlags = exports.string = exports.option = exports.integer = exports.boolean = exports.build = void 0;\nfunction build(defaults) {\n    return (options = {}) => {\n        return Object.assign(Object.assign(Object.assign({ parse: (i, _) => i }, defaults), options), { input: [], multiple: Boolean(options.multiple), type: 'option' });\n    };\n}\nexports.build = build;\nfunction boolean(options = {}) {\n    return Object.assign(Object.assign({ parse: (b, _) => b }, options), { allowNo: Boolean(options.allowNo), type: 'boolean' });\n}\nexports.boolean = boolean;\nexports.integer = build({\n    parse: input => {\n        if (!/^-?\\d+$/.test(input))\n            throw new Error(`Expected an integer but received: ${input}`);\n        return parseInt(input, 10);\n    },\n});\nfunction option(options) {\n    return build(options)();\n}\nexports.option = option;\nconst stringFlag = build({});\nexports.string = stringFlag;\nexports.defaultFlags = {\n    color: boolean({ allowNo: true }),\n};\n"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,MAAR,GAAiBJ,OAAO,CAACK,OAAR,GAAkBL,OAAO,CAACM,OAAR,GAAkBN,OAAO,CAACO,KAAR,GAAgB,KAAK,CAAlH;;AACA,SAASA,KAAT,CAAeC,QAAf,EAAyB;EACrB,OAAO,CAACC,OAAO,GAAG,EAAX,KAAkB;IACrB,OAAOX,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc;MAAEC,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD;IAAnB,CAAd,EAAsCJ,QAAtC,CAAd,EAA+DC,OAA/D,CAAd,EAAuF;MAAEK,KAAK,EAAE,EAAT;MAAaC,QAAQ,EAAEC,OAAO,CAACP,OAAO,CAACM,QAAT,CAA9B;MAAkDE,IAAI,EAAE;IAAxD,CAAvF,CAAP;EACH,CAFD;AAGH;;AACDjB,OAAO,CAACO,KAAR,GAAgBA,KAAhB;;AACA,SAASD,OAAT,CAAiBG,OAAO,GAAG,EAA3B,EAA+B;EAC3B,OAAOX,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc;IAAEC,KAAK,EAAE,CAACO,CAAD,EAAIL,CAAJ,KAAUK;EAAnB,CAAd,EAAsCT,OAAtC,CAAd,EAA8D;IAAEU,OAAO,EAAEH,OAAO,CAACP,OAAO,CAACU,OAAT,CAAlB;IAAqCF,IAAI,EAAE;EAA3C,CAA9D,CAAP;AACH;;AACDjB,OAAO,CAACM,OAAR,GAAkBA,OAAlB;AACAN,OAAO,CAACK,OAAR,GAAkBE,KAAK,CAAC;EACpBI,KAAK,EAAEG,KAAK,IAAI;IACZ,IAAI,CAAC,UAAUM,IAAV,CAAeN,KAAf,CAAL,EACI,MAAM,IAAIO,KAAJ,CAAW,qCAAoCP,KAAM,EAArD,CAAN;IACJ,OAAOQ,QAAQ,CAACR,KAAD,EAAQ,EAAR,CAAf;EACH;AALmB,CAAD,CAAvB;;AAOA,SAASV,MAAT,CAAgBK,OAAhB,EAAyB;EACrB,OAAOF,KAAK,CAACE,OAAD,CAAL,EAAP;AACH;;AACDT,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACA,MAAMmB,UAAU,GAAGhB,KAAK,CAAC,EAAD,CAAxB;AACAP,OAAO,CAACG,MAAR,GAAiBoB,UAAjB;AACAvB,OAAO,CAACE,YAAR,GAAuB;EACnBsB,KAAK,EAAElB,OAAO,CAAC;IAAEa,OAAO,EAAE;EAAX,CAAD;AADK,CAAvB"},"metadata":{},"sourceType":"script"}
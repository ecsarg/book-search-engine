{"ast":null,"code":"'use strict';\n\nconst stdin = process.stdin;\nconst stderr = process.stderr;\nlet read = {\n  hide: (ask, options = {}) => read.raw(ask, false, options),\n  mask: (ask, options = {}) => read.raw(ask, true, options),\n  raw: (ask, maskAfter, options = {}) => {\n    // masking isn't available without setRawMode\n    if (!stdin.setRawMode || process.env.TERM === 'dumb') return read.notty(ask);\n    return new Promise(function (resolve, reject) {\n      const ansi = require('ansi-escapes');\n\n      let input = '';\n      stderr.write(ansi.eraseLine);\n      stderr.write(ansi.cursorLeft);\n      stderr.write(ask);\n      stdin.resume();\n      stdin.setRawMode(true);\n\n      function stop() {\n        if (maskAfter) {\n          stderr.write(ansi.cursorHide + ansi.cursorLeft + ask + input.replace(/./g, '*') + '\\n' + ansi.cursorShow);\n        } else {\n          stderr.write('\\n');\n        }\n\n        stdin.removeListener('data', fn);\n        stdin.setRawMode(false);\n        stdin.pause();\n      }\n\n      function enter() {\n        if (options.required && input.length === 0) return;\n        stop();\n        input = input.replace(/\\r$/, '');\n        input = input || options.default;\n        resolve(input);\n      }\n\n      function ctrlc() {\n        reject(new Error('SIGINT'));\n        stop();\n      }\n\n      function backspace() {\n        if (input.length === 0) return;\n        input = input.substr(0, input.length - 1);\n        stderr.write(ansi.cursorBackward(1));\n        stderr.write(ansi.eraseEndLine);\n      }\n\n      function newchar(c) {\n        input += c;\n        stderr.write(maskAfter ? c : '*'.repeat(c.length));\n      }\n\n      let fn = function (c) {\n        switch (c) {\n          case '\\u0004': // Ctrl-d\n\n          case '\\r':\n          case '\\n':\n            return enter();\n\n          case '\\u0003':\n            // Ctrl-c\n            return ctrlc();\n\n          default:\n            // backspace\n            if (c.charCodeAt(0) === 127) return backspace();else return newchar(c);\n        }\n      };\n\n      stdin.on('data', fn);\n    });\n  },\n  notty: ask => {\n    return new Promise((resolve, reject) => {\n      const spawn = require('cross-spawn');\n\n      stderr.write(ask);\n      let output = spawn.sync('sh', ['-c', 'read -s PASS && echo $PASS'], {\n        stdio: ['inherit', 'pipe', 'inherit'],\n        encoding: 'utf8'\n      });\n      stderr.write('\\n');\n      if (output.error) return reject(output.error);\n      resolve(output.stdout.trim());\n    });\n  }\n};\n/**\n * prompt -- Prompt for a password\n * @module password-prompt\n * @example\n * let prompt = require('password-prompt')\n * let password = prompt('password: ')\n * // password: ******\n * @param {string} [ask] - prompt output\n * @param {Object} [options]\n * @param {string} [options.method=mask] - mask or hide\n * @returns {Promise<string>} input from user\n */\n\nfunction prompt(ask, options = {}) {\n  options = Object.assign({\n    method: 'mask',\n    required: options.default === undefined,\n    default: ''\n  }, options);\n  stdin.setEncoding('utf8');\n  return read[options.method](ask, options).then(input => input || (options.required ? prompt(ask) : ''));\n}\n\nmodule.exports = prompt;","map":{"version":3,"names":["stdin","process","stderr","read","hide","ask","options","raw","mask","maskAfter","setRawMode","env","TERM","notty","Promise","resolve","reject","ansi","require","input","write","eraseLine","cursorLeft","resume","stop","cursorHide","replace","cursorShow","removeListener","fn","pause","enter","required","length","default","ctrlc","Error","backspace","substr","cursorBackward","eraseEndLine","newchar","c","repeat","charCodeAt","on","spawn","output","sync","stdio","encoding","error","stdout","trim","prompt","Object","assign","method","undefined","setEncoding","then","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/password-prompt/index.js"],"sourcesContent":["'use strict'\n\nconst stdin = process.stdin\nconst stderr = process.stderr\n\nlet read = {\n  hide: (ask, options = {}) => read.raw(ask, false, options),\n  mask: (ask, options = {}) => read.raw(ask, true, options),\n  raw: (ask, maskAfter, options = {}) => {\n    // masking isn't available without setRawMode\n    if (!stdin.setRawMode || process.env.TERM === 'dumb') return read.notty(ask)\n    return new Promise(function (resolve, reject) {\n      const ansi = require('ansi-escapes')\n\n      let input = ''\n      stderr.write(ansi.eraseLine)\n      stderr.write(ansi.cursorLeft)\n      stderr.write(ask)\n      stdin.resume()\n      stdin.setRawMode(true)\n\n      function stop () {\n        if (maskAfter) {\n          stderr.write(ansi.cursorHide + ansi.cursorLeft + ask + input.replace(/./g, '*') + '\\n' + ansi.cursorShow)\n        } else {\n          stderr.write('\\n')\n        }\n        stdin.removeListener('data', fn)\n        stdin.setRawMode(false)\n        stdin.pause()\n      }\n\n      function enter () {\n        if (options.required && input.length === 0) return\n        stop()\n        input = input.replace(/\\r$/, '')\n        input = input || options.default\n        resolve(input)\n      }\n\n      function ctrlc () {\n        reject(new Error('SIGINT'))\n        stop()\n      }\n\n      function backspace () {\n        if (input.length === 0) return\n        input = input.substr(0, input.length - 1)\n        stderr.write(ansi.cursorBackward(1))\n        stderr.write(ansi.eraseEndLine)\n      }\n\n      function newchar (c) {\n        input += c\n        stderr.write(maskAfter ? c : '*'.repeat(c.length))\n      }\n\n      let fn = function (c) {\n        switch (c) {\n          case '\\u0004': // Ctrl-d\n          case '\\r':\n          case '\\n':\n            return enter()\n          case '\\u0003': // Ctrl-c\n            return ctrlc()\n          default:\n            // backspace\n            if (c.charCodeAt(0) === 127) return backspace()\n            else return newchar(c)\n        }\n      }\n      stdin.on('data', fn)\n    })\n  },\n  notty: ask => {\n    return new Promise((resolve, reject) => {\n      const spawn = require('cross-spawn')\n      stderr.write(ask)\n      let output = spawn.sync('sh', ['-c', 'read -s PASS && echo $PASS'], {\n        stdio: ['inherit', 'pipe', 'inherit'],\n        encoding: 'utf8'\n      })\n      stderr.write('\\n')\n      if (output.error) return reject(output.error)\n      resolve(output.stdout.trim())\n    })\n  }\n}\n\n/**\n * prompt -- Prompt for a password\n * @module password-prompt\n * @example\n * let prompt = require('password-prompt')\n * let password = prompt('password: ')\n * // password: ******\n * @param {string} [ask] - prompt output\n * @param {Object} [options]\n * @param {string} [options.method=mask] - mask or hide\n * @returns {Promise<string>} input from user\n */\nfunction prompt (ask, options = {}) {\n  options = Object.assign(\n    {\n      method: 'mask',\n      required: options.default === undefined,\n      default: ''\n    },\n    options\n  )\n  stdin.setEncoding('utf8')\n  return read[options.method](ask, options).then(input => input || (options.required ? prompt(ask) : ''))\n}\n\nmodule.exports = prompt\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
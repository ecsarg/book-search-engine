{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\n\nconst Is = require(\"./utils/is\");\n\nconst messages_1 = require(\"./messages\");\n\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\n\nObject.defineProperty(exports, \"ImplementationRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_implementation_1.ImplementationRequest;\n  }\n});\n\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\n\nObject.defineProperty(exports, \"TypeDefinitionRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_typeDefinition_1.TypeDefinitionRequest;\n  }\n});\n\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\n\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_workspaceFolders_1.WorkspaceFoldersRequest;\n  }\n});\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", {\n  enumerable: true,\n  get: function () {\n    return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\n  }\n});\n\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\n\nObject.defineProperty(exports, \"ConfigurationRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_configuration_1.ConfigurationRequest;\n  }\n});\n\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\n\nObject.defineProperty(exports, \"DocumentColorRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_colorProvider_1.DocumentColorRequest;\n  }\n});\nObject.defineProperty(exports, \"ColorPresentationRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_colorProvider_1.ColorPresentationRequest;\n  }\n});\n\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\n\nObject.defineProperty(exports, \"FoldingRangeRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_foldingRange_1.FoldingRangeRequest;\n  }\n});\n\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\n\nObject.defineProperty(exports, \"DeclarationRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_declaration_1.DeclarationRequest;\n  }\n});\n\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\n\nObject.defineProperty(exports, \"SelectionRangeRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_selectionRange_1.SelectionRangeRequest;\n  }\n});\n\nconst protocol_progress_1 = require(\"./protocol.progress\");\n\nObject.defineProperty(exports, \"WorkDoneProgress\", {\n  enumerable: true,\n  get: function () {\n    return protocol_progress_1.WorkDoneProgress;\n  }\n});\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_progress_1.WorkDoneProgressCreateRequest;\n  }\n});\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", {\n  enumerable: true,\n  get: function () {\n    return protocol_progress_1.WorkDoneProgressCancelNotification;\n  }\n});\n\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\n\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest;\n  }\n});\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest;\n  }\n});\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_callHierarchy_1.CallHierarchyPrepareRequest;\n  }\n});\n\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\n\nObject.defineProperty(exports, \"SemanticTokenTypes\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokenTypes;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokenModifiers\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokenModifiers;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokens\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokens;\n  }\n});\nObject.defineProperty(exports, \"TokenFormat\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.TokenFormat;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokensRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokensRequest;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokensDeltaRequest;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokensRangeRequest;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokensRefreshRequest;\n  }\n});\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", {\n  enumerable: true,\n  get: function () {\n    return protocol_semanticTokens_1.SemanticTokensRegistrationType;\n  }\n});\n\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\n\nObject.defineProperty(exports, \"ShowDocumentRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_showDocument_1.ShowDocumentRequest;\n  }\n});\n\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\n\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_linkedEditingRange_1.LinkedEditingRangeRequest;\n  }\n});\n\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\n\nObject.defineProperty(exports, \"FileOperationPatternKind\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.FileOperationPatternKind;\n  }\n});\nObject.defineProperty(exports, \"DidCreateFilesNotification\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.DidCreateFilesNotification;\n  }\n});\nObject.defineProperty(exports, \"WillCreateFilesRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.WillCreateFilesRequest;\n  }\n});\nObject.defineProperty(exports, \"DidRenameFilesNotification\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.DidRenameFilesNotification;\n  }\n});\nObject.defineProperty(exports, \"WillRenameFilesRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.WillRenameFilesRequest;\n  }\n});\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.DidDeleteFilesNotification;\n  }\n});\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_fileOperations_1.WillDeleteFilesRequest;\n  }\n});\n\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\n\nObject.defineProperty(exports, \"UniquenessLevel\", {\n  enumerable: true,\n  get: function () {\n    return protocol_moniker_1.UniquenessLevel;\n  }\n});\nObject.defineProperty(exports, \"MonikerKind\", {\n  enumerable: true,\n  get: function () {\n    return protocol_moniker_1.MonikerKind;\n  }\n});\nObject.defineProperty(exports, \"MonikerRequest\", {\n  enumerable: true,\n  get: function () {\n    return protocol_moniker_1.MonikerRequest;\n  }\n}); // @ts-ignore: to avoid inlining LocationLink as dynamic import\n\nlet __noDynamicImport;\n/**\n * The DocumentFilter namespace provides helper functions to work with\n * [DocumentFilter](#DocumentFilter) literals.\n */\n\n\nvar DocumentFilter;\n\n(function (DocumentFilter) {\n  function is(value) {\n    const candidate = value;\n    return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n  }\n\n  DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * [DocumentSelector](#DocumentSelector)s.\n */\n\n\nvar DocumentSelector;\n\n(function (DocumentSelector) {\n  function is(value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    for (let elem of value) {\n      if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\n\n\nvar RegistrationRequest;\n\n(function (RegistrationRequest) {\n  RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\n\n\nvar UnregistrationRequest;\n\n(function (UnregistrationRequest) {\n  UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\n\nvar ResourceOperationKind;\n\n(function (ResourceOperationKind) {\n  /**\n   * Supports creating new files and folders.\n   */\n  ResourceOperationKind.Create = 'create';\n  /**\n   * Supports renaming existing files and folders.\n   */\n\n  ResourceOperationKind.Rename = 'rename';\n  /**\n   * Supports deleting existing files and folders.\n   */\n\n  ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\n\nvar FailureHandlingKind;\n\n(function (FailureHandlingKind) {\n  /**\n   * Applying the workspace change is simply aborted if one of the changes provided\n   * fails. All operations executed before the failing operation stay executed.\n   */\n  FailureHandlingKind.Abort = 'abort';\n  /**\n   * All operations are executed transactional. That means they either all\n   * succeed or no changes at all are applied to the workspace.\n   */\n\n  FailureHandlingKind.Transactional = 'transactional';\n  /**\n   * If the workspace edit contains only textual file changes they are executed transactional.\n   * If resource changes (create, rename or delete file) are part of the change the failure\n   * handling strategy is abort.\n   */\n\n  FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n  /**\n   * The client tries to undo the operations already executed. But there is no\n   * guarantee that this is succeeding.\n   */\n\n  FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n */\n\n\nvar StaticRegistrationOptions;\n\n(function (StaticRegistrationOptions) {\n  function hasId(value) {\n    const candidate = value;\n    return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n  }\n\n  StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n */\n\n\nvar TextDocumentRegistrationOptions;\n\n(function (TextDocumentRegistrationOptions) {\n  function is(value) {\n    const candidate = value;\n    return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n  }\n\n  TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n */\n\n\nvar WorkDoneProgressOptions;\n\n(function (WorkDoneProgressOptions) {\n  function is(value) {\n    const candidate = value;\n    return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n  }\n\n  WorkDoneProgressOptions.is = is;\n\n  function hasWorkDoneProgress(value) {\n    const candidate = value;\n    return candidate && Is.boolean(candidate.workDoneProgress);\n  }\n\n  WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\n\n\nvar InitializeRequest;\n\n(function (InitializeRequest) {\n  InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\n\n\nvar InitializeError;\n\n(function (InitializeError) {\n  /**\n   * If the protocol version provided by the client can't be handled by the server.\n   * @deprecated This initialize error got replaced by client capabilities. There is\n   * no version handshake in version 3.0x\n   */\n  InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\n\n\nvar InitializedNotification;\n\n(function (InitializedNotification) {\n  InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {})); //---- Shutdown Method ----\n\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\n\n\nvar ShutdownRequest;\n\n(function (ShutdownRequest) {\n  ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {})); //---- Exit Notification ----\n\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\n\n\nvar ExitNotification;\n\n(function (ExitNotification) {\n  ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\n\n\nvar DidChangeConfigurationNotification;\n\n(function (DidChangeConfigurationNotification) {\n  DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {})); //---- Message show and log notifications ----\n\n/**\n * The message type\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  /**\n   * An error message.\n   */\n  MessageType.Error = 1;\n  /**\n   * A warning message.\n   */\n\n  MessageType.Warning = 2;\n  /**\n   * An information message.\n   */\n\n  MessageType.Info = 3;\n  /**\n   * A log message.\n   */\n\n  MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\n\n\nvar ShowMessageNotification;\n\n(function (ShowMessageNotification) {\n  ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\n\n\nvar ShowMessageRequest;\n\n(function (ShowMessageRequest) {\n  ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\n\n\nvar LogMessageNotification;\n\n(function (LogMessageNotification) {\n  LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {})); //---- Telemetry notification\n\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\n\n\nvar TelemetryEventNotification;\n\n(function (TelemetryEventNotification) {\n  TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\n\n\nvar TextDocumentSyncKind;\n\n(function (TextDocumentSyncKind) {\n  /**\n   * Documents should not be synced at all.\n   */\n  TextDocumentSyncKind.None = 0;\n  /**\n   * Documents are synced by always sending the full content\n   * of the document.\n   */\n\n  TextDocumentSyncKind.Full = 1;\n  /**\n   * Documents are synced by sending the full content on open.\n   * After that only incremental updates to the document are\n   * send.\n   */\n\n  TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\n\n\nvar DidOpenTextDocumentNotification;\n\n(function (DidOpenTextDocumentNotification) {\n  DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n  DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\n\nvar TextDocumentContentChangeEvent;\n\n(function (TextDocumentContentChangeEvent) {\n  /**\n   * Checks whether the information describes a delta event.\n   */\n  function isIncremental(event) {\n    let candidate = event;\n    return candidate !== undefined && candidate !== null && typeof candidate.text === 'string' && candidate.range !== undefined && (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n  }\n\n  TextDocumentContentChangeEvent.isIncremental = isIncremental;\n  /**\n   * Checks whether the information describes a full replacement event.\n   */\n\n  function isFull(event) {\n    let candidate = event;\n    return candidate !== undefined && candidate !== null && typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n  }\n\n  TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\n\n\nvar DidChangeTextDocumentNotification;\n\n(function (DidChangeTextDocumentNotification) {\n  DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n  DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\n\n\nvar DidCloseTextDocumentNotification;\n\n(function (DidCloseTextDocumentNotification) {\n  DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n  DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\n\n\nvar DidSaveTextDocumentNotification;\n\n(function (DidSaveTextDocumentNotification) {\n  DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n  DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\n\n\nvar TextDocumentSaveReason;\n\n(function (TextDocumentSaveReason) {\n  /**\n   * Manually triggered, e.g. by the user pressing save, by starting debugging,\n   * or by an API call.\n   */\n  TextDocumentSaveReason.Manual = 1;\n  /**\n   * Automatic after a delay.\n   */\n\n  TextDocumentSaveReason.AfterDelay = 2;\n  /**\n   * When the editor lost focus.\n   */\n\n  TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\n\n\nvar WillSaveTextDocumentNotification;\n\n(function (WillSaveTextDocumentNotification) {\n  WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n  WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\n\n\nvar WillSaveTextDocumentWaitUntilRequest;\n\n(function (WillSaveTextDocumentWaitUntilRequest) {\n  WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n  WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\n\n\nvar DidChangeWatchedFilesNotification;\n\n(function (DidChangeWatchedFilesNotification) {\n  DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\n\n\nvar FileChangeType;\n\n(function (FileChangeType) {\n  /**\n   * The file got created.\n   */\n  FileChangeType.Created = 1;\n  /**\n   * The file got changed.\n   */\n\n  FileChangeType.Changed = 2;\n  /**\n   * The file got deleted.\n   */\n\n  FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\n\nvar WatchKind;\n\n(function (WatchKind) {\n  /**\n   * Interested in create events.\n   */\n  WatchKind.Create = 1;\n  /**\n   * Interested in change events\n   */\n\n  WatchKind.Change = 2;\n  /**\n   * Interested in delete events\n   */\n\n  WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\n\n\nvar PublishDiagnosticsNotification;\n\n(function (PublishDiagnosticsNotification) {\n  PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\n\n\nvar CompletionTriggerKind;\n\n(function (CompletionTriggerKind) {\n  /**\n   * Completion was triggered by typing an identifier (24x7 code\n   * complete), manual invocation (e.g Ctrl+Space) or via API.\n   */\n  CompletionTriggerKind.Invoked = 1;\n  /**\n   * Completion was triggered by a trigger character specified by\n   * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n   */\n\n  CompletionTriggerKind.TriggerCharacter = 2;\n  /**\n   * Completion was re-triggered as current completion list is incomplete\n   */\n\n  CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\n\n\nvar CompletionRequest;\n\n(function (CompletionRequest) {\n  CompletionRequest.method = 'textDocument/completion';\n  CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\n\n\nvar CompletionResolveRequest;\n\n(function (CompletionResolveRequest) {\n  CompletionResolveRequest.method = 'completionItem/resolve';\n  CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\n\n\nvar HoverRequest;\n\n(function (HoverRequest) {\n  HoverRequest.method = 'textDocument/hover';\n  HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\n\n\nvar SignatureHelpTriggerKind;\n\n(function (SignatureHelpTriggerKind) {\n  /**\n   * Signature help was invoked manually by the user or by a command.\n   */\n  SignatureHelpTriggerKind.Invoked = 1;\n  /**\n   * Signature help was triggered by a trigger character.\n   */\n\n  SignatureHelpTriggerKind.TriggerCharacter = 2;\n  /**\n   * Signature help was triggered by the cursor moving or by the document content changing.\n   */\n\n  SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\n\nvar SignatureHelpRequest;\n\n(function (SignatureHelpRequest) {\n  SignatureHelpRequest.method = 'textDocument/signatureHelp';\n  SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n * to such.\n */\n\n\nvar DefinitionRequest;\n\n(function (DefinitionRequest) {\n  DefinitionRequest.method = 'textDocument/definition';\n  DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\n\n\nvar ReferencesRequest;\n\n(function (ReferencesRequest) {\n  ReferencesRequest.method = 'textDocument/references';\n  ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\n\n\nvar DocumentHighlightRequest;\n\n(function (DocumentHighlightRequest) {\n  DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n  DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\n\n\nvar DocumentSymbolRequest;\n\n(function (DocumentSymbolRequest) {\n  DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n  DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\n\n\nvar CodeActionRequest;\n\n(function (CodeActionRequest) {\n  CodeActionRequest.method = 'textDocument/codeAction';\n  CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type [CodeAction](#CodeAction) the response\n * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n */\n\n\nvar CodeActionResolveRequest;\n\n(function (CodeActionResolveRequest) {\n  CodeActionResolveRequest.method = 'codeAction/resolve';\n  CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\n\n\nvar WorkspaceSymbolRequest;\n\n(function (WorkspaceSymbolRequest) {\n  WorkspaceSymbolRequest.method = 'workspace/symbol';\n  WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\n\n\nvar CodeLensRequest;\n\n(function (CodeLensRequest) {\n  CodeLensRequest.method = 'textDocument/codeLens';\n  CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\n\n\nvar CodeLensResolveRequest;\n\n(function (CodeLensResolveRequest) {\n  CodeLensResolveRequest.method = 'codeLens/resolve';\n  CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\n\n\nvar CodeLensRefreshRequest;\n\n(function (CodeLensRefreshRequest) {\n  CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n  CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\n\n\nvar DocumentLinkRequest;\n\n(function (DocumentLinkRequest) {\n  DocumentLinkRequest.method = 'textDocument/documentLink';\n  DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\n\n\nvar DocumentLinkResolveRequest;\n\n(function (DocumentLinkResolveRequest) {\n  DocumentLinkResolveRequest.method = 'documentLink/resolve';\n  DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\n\n\nvar DocumentFormattingRequest;\n\n(function (DocumentFormattingRequest) {\n  DocumentFormattingRequest.method = 'textDocument/formatting';\n  DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\n\n\nvar DocumentRangeFormattingRequest;\n\n(function (DocumentRangeFormattingRequest) {\n  DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n  DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\n\n\nvar DocumentOnTypeFormattingRequest;\n\n(function (DocumentOnTypeFormattingRequest) {\n  DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n  DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {})); //---- Rename ----------------------------------------------\n\n\nvar PrepareSupportDefaultBehavior;\n\n(function (PrepareSupportDefaultBehavior) {\n  /**\n   * The client's default behavior is to select the identifier\n   * according the to language's syntax rule.\n   */\n  PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\n\n\nvar RenameRequest;\n\n(function (RenameRequest) {\n  RenameRequest.method = 'textDocument/rename';\n  RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\n\n\nvar PrepareRenameRequest;\n\n(function (PrepareRenameRequest) {\n  PrepareRenameRequest.method = 'textDocument/prepareRename';\n  PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\n\n\nvar ExecuteCommandRequest;\n\n(function (ExecuteCommandRequest) {\n  ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\n\n\nvar ApplyWorkspaceEditRequest;\n\n(function (ApplyWorkspaceEditRequest) {\n  ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","DocumentLinkRequest","CodeLensRefreshRequest","CodeLensResolveRequest","CodeLensRequest","WorkspaceSymbolRequest","CodeActionResolveRequest","CodeActionRequest","DocumentSymbolRequest","DocumentHighlightRequest","ReferencesRequest","DefinitionRequest","SignatureHelpRequest","SignatureHelpTriggerKind","HoverRequest","CompletionResolveRequest","CompletionRequest","CompletionTriggerKind","PublishDiagnosticsNotification","WatchKind","FileChangeType","DidChangeWatchedFilesNotification","WillSaveTextDocumentWaitUntilRequest","WillSaveTextDocumentNotification","TextDocumentSaveReason","DidSaveTextDocumentNotification","DidCloseTextDocumentNotification","DidChangeTextDocumentNotification","TextDocumentContentChangeEvent","DidOpenTextDocumentNotification","TextDocumentSyncKind","TelemetryEventNotification","LogMessageNotification","ShowMessageRequest","ShowMessageNotification","MessageType","DidChangeConfigurationNotification","ExitNotification","ShutdownRequest","InitializedNotification","InitializeError","InitializeRequest","WorkDoneProgressOptions","TextDocumentRegistrationOptions","StaticRegistrationOptions","FailureHandlingKind","ResourceOperationKind","UnregistrationRequest","RegistrationRequest","DocumentSelector","DocumentFilter","MonikerRequest","MonikerKind","UniquenessLevel","WillDeleteFilesRequest","DidDeleteFilesNotification","WillRenameFilesRequest","DidRenameFilesNotification","WillCreateFilesRequest","DidCreateFilesNotification","FileOperationPatternKind","LinkedEditingRangeRequest","ShowDocumentRequest","SemanticTokensRegistrationType","SemanticTokensRefreshRequest","SemanticTokensRangeRequest","SemanticTokensDeltaRequest","SemanticTokensRequest","TokenFormat","SemanticTokens","SemanticTokenModifiers","SemanticTokenTypes","CallHierarchyPrepareRequest","CallHierarchyOutgoingCallsRequest","CallHierarchyIncomingCallsRequest","WorkDoneProgressCancelNotification","WorkDoneProgressCreateRequest","WorkDoneProgress","SelectionRangeRequest","DeclarationRequest","FoldingRangeRequest","ColorPresentationRequest","DocumentColorRequest","ConfigurationRequest","DidChangeWorkspaceFoldersNotification","WorkspaceFoldersRequest","TypeDefinitionRequest","ImplementationRequest","ApplyWorkspaceEditRequest","ExecuteCommandRequest","PrepareRenameRequest","RenameRequest","PrepareSupportDefaultBehavior","DocumentOnTypeFormattingRequest","DocumentRangeFormattingRequest","DocumentFormattingRequest","DocumentLinkResolveRequest","Is","require","messages_1","protocol_implementation_1","enumerable","get","protocol_typeDefinition_1","protocol_workspaceFolders_1","protocol_configuration_1","protocol_colorProvider_1","protocol_foldingRange_1","protocol_declaration_1","protocol_selectionRange_1","protocol_progress_1","protocol_callHierarchy_1","protocol_semanticTokens_1","protocol_showDocument_1","protocol_linkedEditingRange_1","protocol_fileOperations_1","protocol_moniker_1","__noDynamicImport","is","candidate","string","language","scheme","pattern","Array","isArray","elem","type","ProtocolRequestType","Create","Rename","Delete","Abort","Transactional","TextOnlyTransactional","Undo","hasId","id","length","documentSelector","objectLiteral","workDoneProgress","undefined","boolean","hasWorkDoneProgress","unknownProtocolVersion","ProtocolNotificationType","ProtocolRequestType0","ProtocolNotificationType0","Error","Warning","Info","Log","None","Full","Incremental","method","isIncremental","event","text","range","rangeLength","isFull","Manual","AfterDelay","FocusOut","Created","Changed","Deleted","Change","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","ContentChange","Identifier"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokenTypes\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenTypes; } });\nObject.defineProperty(exports, \"SemanticTokenModifiers\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenModifiers; } });\nObject.defineProperty(exports, \"SemanticTokens\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokens; } });\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The DocumentFilter namespace provides helper functions to work with\n * [DocumentFilter](#DocumentFilter) literals.\n */\nvar DocumentFilter;\n(function (DocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * [DocumentSelector](#DocumentSelector)s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\nvar InitializeError;\n(function (InitializeError) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n * to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type [CodeAction](#CodeAction) the response\n * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n//# sourceMappingURL=protocol.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
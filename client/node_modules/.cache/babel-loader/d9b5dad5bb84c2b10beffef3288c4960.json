{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printBlockString = exports.printType = exports.printIntrospectionSchema = exports.printSchema = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst types_1 = require(\"../types\");\n\nconst utils_1 = require(\"../composition/utils\");\n\nconst directives_1 = require(\"../directives\");\n\nfunction printSchema(schema, options) {\n  return printFilteredSchema(schema, n => !graphql_1.isSpecifiedDirective(n) && !utils_1.isApolloTypeSystemDirective(n), isDefinedType, options);\n}\n\nexports.printSchema = printSchema;\n\nfunction printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, graphql_1.isSpecifiedDirective, graphql_1.isIntrospectionType, options);\n}\n\nexports.printIntrospectionSchema = printIntrospectionSchema;\n\nfunction isDefinedType(type) {\n  return !graphql_1.isSpecifiedScalarType(type) && !graphql_1.isIntrospectionType(type) && !types_1.isFederationType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).sort((type1, type2) => type1.name.localeCompare(type2.name)).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(directive => printDirective(directive, options)), types.map(type => printType(type, options))).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type, options) {\n  if (graphql_1.isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (graphql_1.isObjectType(type)) {\n    return printObject(type, options);\n  } else if (graphql_1.isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (graphql_1.isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (graphql_1.isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (graphql_1.isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n\n  throw Error('Unexpected type: ' + type.toString());\n}\n\nexports.printType = printType;\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + `scalar ${type.name}`;\n}\n\nfunction printObject(type, options) {\n  const interfaces = type.getInterfaces();\n  const implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(i => i.name).join(' & ') : '';\n  const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n  return printDescription(options, type) + (isExtension ? 'extend ' : '') + `type ${type.name}${implementedInterfaces}` + printFederationDirectives(type) + printFields(options, type);\n}\n\nfunction printInterface(type, options) {\n  const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n  return printDescription(options, type) + (isExtension ? 'extend ' : '') + `interface ${type.name}` + printFederationDirectives(type) + printFields(options, type);\n}\n\nfunction printUnion(type, options) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type, options) {\n  const values = type.getValues().map((value, i) => printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value));\n  return printDescription(options, type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type, options) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(options, f, '  ', !i) + '  ' + printInputValue(f));\n  return printDescription(options, type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(options, type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f) + printFederationDirectives(f) + printOtherKnownDirectiveUsages(f));\n  return printBlock(fields);\n}\n\nfunction printFederationDirectives(typeOrField) {\n  if (!typeOrField.astNode) return '';\n  if (graphql_1.isInputObjectType(typeOrField)) return '';\n  const federationDirectivesOnTypeOrField = directives_1.gatherDirectives(typeOrField).filter(n => directives_1.federationDirectives.some(fedDir => fedDir.name === n.name.value)).map(graphql_1.print);\n  const dedupedDirectives = [...new Set(federationDirectivesOnTypeOrField)];\n  return dedupedDirectives.length > 0 ? ' ' + dedupedDirectives.join(' ') : '';\n}\n\nfunction printOtherKnownDirectiveUsages(field) {\n  var _a, _b, _c;\n\n  const otherKnownDirectiveUsages = (_c = (_b = (_a = field.extensions) === null || _a === void 0 ? void 0 : _a.federation) === null || _b === void 0 ? void 0 : _b.otherKnownDirectiveUsages) !== null && _c !== void 0 ? _c : [];\n  if (otherKnownDirectiveUsages.length < 1) return '';\n  return ` ${otherKnownDirectiveUsages.slice().sort((a, b) => a.name.value.localeCompare(b.name.value)).map(graphql_1.print).join(' ')}`;\n}\n\n;\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(options, args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  }\n\n  if (args.every(arg => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map((arg, i) => printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg)).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = graphql_1.astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${graphql_1.print(defaultAST)}`;\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  const reason = fieldOrEnumVal.deprecationReason;\n  const reasonAST = graphql_1.astFromValue(reason, graphql_1.GraphQLString);\n\n  if (reasonAST && reason !== '' && reason !== graphql_1.DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + graphql_1.print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printDescription(options, def, indentation = '', firstInBlock = true) {\n  const {\n    description\n  } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n    return printDescriptionWithComments(description, indentation, firstInBlock);\n  }\n\n  const preferMultipleLines = description.length > 70;\n  const blockString = printBlockString(description, '', preferMultipleLines);\n  const prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\nfunction printDescriptionWithComments(description, indentation, firstInBlock) {\n  const prefix = indentation && !firstInBlock ? '\\n' : '';\n  const comment = description.split('\\n').map(line => indentation + (line !== '' ? '# ' + line : '#')).join('\\n');\n  return prefix + comment + '\\n';\n}\n\nfunction printBlockString(value, indentation = '', preferMultipleLines = false) {\n  const isSingleLine = value.indexOf('\\n') === -1;\n  const hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  const hasTrailingQuote = value[value.length - 1] === '\"';\n  const hasTrailingSlash = value[value.length - 1] === '\\\\';\n  const printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  let result = '';\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n\nexports.printBlockString = printBlockString;","map":{"version":3,"sources":["../../src/service/printFederatedSchema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printBlockString = exports.printType = exports.printIntrospectionSchema = exports.printSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst types_1 = require(\"../types\");\nconst utils_1 = require(\"../composition/utils\");\nconst directives_1 = require(\"../directives\");\nfunction printSchema(schema, options) {\n    return printFilteredSchema(schema, (n) => !graphql_1.isSpecifiedDirective(n) && !utils_1.isApolloTypeSystemDirective(n), isDefinedType, options);\n}\nexports.printSchema = printSchema;\nfunction printIntrospectionSchema(schema, options) {\n    return printFilteredSchema(schema, graphql_1.isSpecifiedDirective, graphql_1.isIntrospectionType, options);\n}\nexports.printIntrospectionSchema = printIntrospectionSchema;\nfunction isDefinedType(type) {\n    return (!graphql_1.isSpecifiedScalarType(type) &&\n        !graphql_1.isIntrospectionType(type) &&\n        !types_1.isFederationType(type));\n}\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n    const directives = schema.getDirectives().filter(directiveFilter);\n    const types = Object.values(schema.getTypeMap())\n        .sort((type1, type2) => type1.name.localeCompare(type2.name))\n        .filter(typeFilter);\n    return ([printSchemaDefinition(schema)]\n        .concat(directives.map(directive => printDirective(directive, options)), types.map(type => printType(type, options)))\n        .filter(Boolean)\n        .join('\\n\\n') + '\\n');\n}\nfunction printSchemaDefinition(schema) {\n    if (isSchemaOfCommonNames(schema)) {\n        return;\n    }\n    const operationTypes = [];\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        operationTypes.push(`  query: ${queryType.name}`);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        operationTypes.push(`  mutation: ${mutationType.name}`);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        operationTypes.push(`  subscription: ${subscriptionType.name}`);\n    }\n    return `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\nfunction isSchemaOfCommonNames(schema) {\n    const queryType = schema.getQueryType();\n    if (queryType && queryType.name !== 'Query') {\n        return false;\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType && mutationType.name !== 'Mutation') {\n        return false;\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType && subscriptionType.name !== 'Subscription') {\n        return false;\n    }\n    return true;\n}\nfunction printType(type, options) {\n    if (graphql_1.isScalarType(type)) {\n        return printScalar(type, options);\n    }\n    else if (graphql_1.isObjectType(type)) {\n        return printObject(type, options);\n    }\n    else if (graphql_1.isInterfaceType(type)) {\n        return printInterface(type, options);\n    }\n    else if (graphql_1.isUnionType(type)) {\n        return printUnion(type, options);\n    }\n    else if (graphql_1.isEnumType(type)) {\n        return printEnum(type, options);\n    }\n    else if (graphql_1.isInputObjectType(type)) {\n        return printInputObject(type, options);\n    }\n    throw Error('Unexpected type: ' + type.toString());\n}\nexports.printType = printType;\nfunction printScalar(type, options) {\n    return printDescription(options, type) + `scalar ${type.name}`;\n}\nfunction printObject(type, options) {\n    const interfaces = type.getInterfaces();\n    const implementedInterfaces = interfaces.length\n        ? ' implements ' + interfaces.map(i => i.name).join(' & ')\n        : '';\n    const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n    return (printDescription(options, type) +\n        (isExtension ? 'extend ' : '') +\n        `type ${type.name}${implementedInterfaces}` +\n        printFederationDirectives(type) +\n        printFields(options, type));\n}\nfunction printInterface(type, options) {\n    const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n    return (printDescription(options, type) +\n        (isExtension ? 'extend ' : '') +\n        `interface ${type.name}` +\n        printFederationDirectives(type) +\n        printFields(options, type));\n}\nfunction printUnion(type, options) {\n    const types = type.getTypes();\n    const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n    return printDescription(options, type) + 'union ' + type.name + possibleTypes;\n}\nfunction printEnum(type, options) {\n    const values = type\n        .getValues()\n        .map((value, i) => printDescription(options, value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value));\n    return (printDescription(options, type) + `enum ${type.name}` + printBlock(values));\n}\nfunction printInputObject(type, options) {\n    const fields = Object.values(type.getFields()).map((f, i) => printDescription(options, f, '  ', !i) + '  ' + printInputValue(f));\n    return (printDescription(options, type) + `input ${type.name}` + printBlock(fields));\n}\nfunction printFields(options, type) {\n    const fields = Object.values(type.getFields()).map((f, i) => printDescription(options, f, '  ', !i) +\n        '  ' +\n        f.name +\n        printArgs(options, f.args, '  ') +\n        ': ' +\n        String(f.type) +\n        printDeprecated(f) +\n        printFederationDirectives(f) +\n        printOtherKnownDirectiveUsages(f));\n    return printBlock(fields);\n}\nfunction printFederationDirectives(typeOrField) {\n    if (!typeOrField.astNode)\n        return '';\n    if (graphql_1.isInputObjectType(typeOrField))\n        return '';\n    const federationDirectivesOnTypeOrField = directives_1.gatherDirectives(typeOrField)\n        .filter((n) => directives_1.federationDirectives.some((fedDir) => fedDir.name === n.name.value))\n        .map(graphql_1.print);\n    const dedupedDirectives = [...new Set(federationDirectivesOnTypeOrField)];\n    return dedupedDirectives.length > 0 ? ' ' + dedupedDirectives.join(' ') : '';\n}\nfunction printOtherKnownDirectiveUsages(field) {\n    var _a, _b, _c;\n    const otherKnownDirectiveUsages = ((_c = (_b = (_a = field.extensions) === null || _a === void 0 ? void 0 : _a.federation) === null || _b === void 0 ? void 0 : _b.otherKnownDirectiveUsages) !== null && _c !== void 0 ? _c : []);\n    if (otherKnownDirectiveUsages.length < 1)\n        return '';\n    return ` ${otherKnownDirectiveUsages\n        .slice()\n        .sort((a, b) => a.name.value.localeCompare(b.name.value))\n        .map(graphql_1.print)\n        .join(' ')}`;\n}\n;\nfunction printBlock(items) {\n    return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\nfunction printArgs(options, args, indentation = '') {\n    if (args.length === 0) {\n        return '';\n    }\n    if (args.every(arg => !arg.description)) {\n        return '(' + args.map(printInputValue).join(', ') + ')';\n    }\n    return ('(\\n' +\n        args\n            .map((arg, i) => printDescription(options, arg, '  ' + indentation, !i) +\n            '  ' +\n            indentation +\n            printInputValue(arg))\n            .join('\\n') +\n        '\\n' +\n        indentation +\n        ')');\n}\nfunction printInputValue(arg) {\n    const defaultAST = graphql_1.astFromValue(arg.defaultValue, arg.type);\n    let argDecl = arg.name + ': ' + String(arg.type);\n    if (defaultAST) {\n        argDecl += ` = ${graphql_1.print(defaultAST)}`;\n    }\n    return argDecl;\n}\nfunction printDirective(directive, options) {\n    return (printDescription(options, directive) +\n        'directive @' +\n        directive.name +\n        printArgs(options, directive.args) +\n        (directive.isRepeatable ? ' repeatable' : '') +\n        ' on ' +\n        directive.locations.join(' | '));\n}\nfunction printDeprecated(fieldOrEnumVal) {\n    if (!fieldOrEnumVal.isDeprecated) {\n        return '';\n    }\n    const reason = fieldOrEnumVal.deprecationReason;\n    const reasonAST = graphql_1.astFromValue(reason, graphql_1.GraphQLString);\n    if (reasonAST && reason !== '' && reason !== graphql_1.DEFAULT_DEPRECATION_REASON) {\n        return ' @deprecated(reason: ' + graphql_1.print(reasonAST) + ')';\n    }\n    return ' @deprecated';\n}\nfunction printDescription(options, def, indentation = '', firstInBlock = true) {\n    const { description } = def;\n    if (description == null) {\n        return '';\n    }\n    if ((options === null || options === void 0 ? void 0 : options.commentDescriptions) === true) {\n        return printDescriptionWithComments(description, indentation, firstInBlock);\n    }\n    const preferMultipleLines = description.length > 70;\n    const blockString = printBlockString(description, '', preferMultipleLines);\n    const prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n    return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\nfunction printDescriptionWithComments(description, indentation, firstInBlock) {\n    const prefix = indentation && !firstInBlock ? '\\n' : '';\n    const comment = description\n        .split('\\n')\n        .map(line => indentation + (line !== '' ? '# ' + line : '#'))\n        .join('\\n');\n    return prefix + comment + '\\n';\n}\nfunction printBlockString(value, indentation = '', preferMultipleLines = false) {\n    const isSingleLine = value.indexOf('\\n') === -1;\n    const hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n    const hasTrailingQuote = value[value.length - 1] === '\"';\n    const hasTrailingSlash = value[value.length - 1] === '\\\\';\n    const printAsMultipleLines = !isSingleLine ||\n        hasTrailingQuote ||\n        hasTrailingSlash ||\n        preferMultipleLines;\n    let result = '';\n    if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n        result += '\\n' + indentation;\n    }\n    result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n    if (printAsMultipleLines) {\n        result += '\\n';\n    }\n    return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\nexports.printBlockString = printBlockString;\n//# sourceMappingURL=printFederatedSchema.js.map"]},"metadata":{},"sourceType":"script"}
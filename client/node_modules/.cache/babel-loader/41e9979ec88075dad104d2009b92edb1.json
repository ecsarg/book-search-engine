{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tree = void 0;\n\nconst treeify = require('object-treeify');\n\nclass Tree {\n  constructor() {\n    this.nodes = {};\n  }\n\n  insert(child, value = new Tree()) {\n    this.nodes[child] = value;\n    return this;\n  }\n\n  search(key) {\n    for (const child of Object.keys(this.nodes)) {\n      if (child === key) {\n        return this.nodes[child];\n      }\n\n      const c = this.nodes[child].search(key);\n      if (c) return c;\n    }\n  } // tslint:disable-next-line:no-console\n\n\n  display(logger = console.log) {\n    const addNodes = function (nodes) {\n      const tree = {};\n\n      for (const p of Object.keys(nodes)) {\n        tree[p] = addNodes(nodes[p].nodes);\n      }\n\n      return tree;\n    };\n\n    const tree = addNodes(this.nodes);\n    logger(treeify(tree));\n  }\n\n}\n\nexports.Tree = Tree;\n\nfunction tree() {\n  return new Tree();\n}\n\nexports.default = tree;","map":{"version":3,"names":["Object","defineProperty","exports","value","Tree","treeify","require","constructor","nodes","insert","child","search","key","keys","c","display","logger","console","log","addNodes","tree","p","default"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/cli-ux/lib/styled/tree.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst treeify = require('object-treeify');\nclass Tree {\n    constructor() {\n        this.nodes = {};\n    }\n    insert(child, value = new Tree()) {\n        this.nodes[child] = value;\n        return this;\n    }\n    search(key) {\n        for (const child of Object.keys(this.nodes)) {\n            if (child === key) {\n                return this.nodes[child];\n            }\n            const c = this.nodes[child].search(key);\n            if (c)\n                return c;\n        }\n    }\n    // tslint:disable-next-line:no-console\n    display(logger = console.log) {\n        const addNodes = function (nodes) {\n            const tree = {};\n            for (const p of Object.keys(nodes)) {\n                tree[p] = addNodes(nodes[p].nodes);\n            }\n            return tree;\n        };\n        const tree = addNodes(this.nodes);\n        logger(treeify(tree));\n    }\n}\nexports.Tree = Tree;\nfunction tree() {\n    return new Tree();\n}\nexports.default = tree;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,IAAR,GAAe,KAAK,CAApB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMF,IAAN,CAAW;EACPG,WAAW,GAAG;IACV,KAAKC,KAAL,GAAa,EAAb;EACH;;EACDC,MAAM,CAACC,KAAD,EAAQP,KAAK,GAAG,IAAIC,IAAJ,EAAhB,EAA4B;IAC9B,KAAKI,KAAL,CAAWE,KAAX,IAAoBP,KAApB;IACA,OAAO,IAAP;EACH;;EACDQ,MAAM,CAACC,GAAD,EAAM;IACR,KAAK,MAAMF,KAAX,IAAoBV,MAAM,CAACa,IAAP,CAAY,KAAKL,KAAjB,CAApB,EAA6C;MACzC,IAAIE,KAAK,KAAKE,GAAd,EAAmB;QACf,OAAO,KAAKJ,KAAL,CAAWE,KAAX,CAAP;MACH;;MACD,MAAMI,CAAC,GAAG,KAAKN,KAAL,CAAWE,KAAX,EAAkBC,MAAlB,CAAyBC,GAAzB,CAAV;MACA,IAAIE,CAAJ,EACI,OAAOA,CAAP;IACP;EACJ,CAjBM,CAkBP;;;EACAC,OAAO,CAACC,MAAM,GAAGC,OAAO,CAACC,GAAlB,EAAuB;IAC1B,MAAMC,QAAQ,GAAG,UAAUX,KAAV,EAAiB;MAC9B,MAAMY,IAAI,GAAG,EAAb;;MACA,KAAK,MAAMC,CAAX,IAAgBrB,MAAM,CAACa,IAAP,CAAYL,KAAZ,CAAhB,EAAoC;QAChCY,IAAI,CAACC,CAAD,CAAJ,GAAUF,QAAQ,CAACX,KAAK,CAACa,CAAD,CAAL,CAASb,KAAV,CAAlB;MACH;;MACD,OAAOY,IAAP;IACH,CAND;;IAOA,MAAMA,IAAI,GAAGD,QAAQ,CAAC,KAAKX,KAAN,CAArB;IACAQ,MAAM,CAACX,OAAO,CAACe,IAAD,CAAR,CAAN;EACH;;AA7BM;;AA+BXlB,OAAO,CAACE,IAAR,GAAeA,IAAf;;AACA,SAASgB,IAAT,GAAgB;EACZ,OAAO,IAAIhB,IAAJ,EAAP;AACH;;AACDF,OAAO,CAACoB,OAAR,GAAkBF,IAAlB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.help = exports.version = exports.enum = exports._enum = exports.custom = exports.option = exports.build = exports.string = exports.file = exports.directory = exports.url = exports.integer = exports.boolean = void 0;\n\nconst parser_1 = require(\"./parser\");\n\nvar parser_2 = require(\"./parser\");\n\nObject.defineProperty(exports, \"boolean\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.boolean;\n  }\n});\nObject.defineProperty(exports, \"integer\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.integer;\n  }\n});\nObject.defineProperty(exports, \"url\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.url;\n  }\n});\nObject.defineProperty(exports, \"directory\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.directory;\n  }\n});\nObject.defineProperty(exports, \"file\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.file;\n  }\n});\nObject.defineProperty(exports, \"string\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.string;\n  }\n});\nObject.defineProperty(exports, \"build\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.build;\n  }\n});\nObject.defineProperty(exports, \"option\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.option;\n  }\n});\nObject.defineProperty(exports, \"custom\", {\n  enumerable: true,\n  get: function () {\n    return parser_2.custom;\n  }\n});\n\nfunction _enum(opts) {\n  return (0, parser_1.custom)({\n    async parse(input) {\n      if (!opts.options.includes(input)) throw new Error(`Expected --${this.name}=${input} to be one of: ${opts.options.join(', ')}`);\n      return input;\n    },\n\n    helpValue: `(${opts.options.join('|')})`,\n    ...opts\n  })();\n}\n\nexports._enum = _enum;\nexports.enum = _enum;\n\nconst version = (opts = {}) => {\n  return (0, parser_1.boolean)({\n    description: 'Show CLI version.',\n    ...opts,\n    parse: async (_, cmd) => {\n      cmd.log(cmd.config.userAgent);\n      cmd.exit(0);\n    }\n  });\n};\n\nexports.version = version;\n\nconst help = (opts = {}) => {\n  return (0, parser_1.boolean)({\n    description: 'Show CLI help.',\n    ...opts,\n    parse: async (_, cmd) => {\n      cmd._help();\n    }\n  });\n};\n\nexports.help = help;","map":{"version":3,"names":["Object","defineProperty","exports","value","help","version","enum","_enum","custom","option","build","string","file","directory","url","integer","boolean","parser_1","require","parser_2","enumerable","get","opts","parse","input","options","includes","Error","name","join","helpValue","description","_","cmd","log","config","userAgent","exit","_help"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/@oclif/core/lib/flags.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.help = exports.version = exports.enum = exports._enum = exports.custom = exports.option = exports.build = exports.string = exports.file = exports.directory = exports.url = exports.integer = exports.boolean = void 0;\nconst parser_1 = require(\"./parser\");\nvar parser_2 = require(\"./parser\");\nObject.defineProperty(exports, \"boolean\", { enumerable: true, get: function () { return parser_2.boolean; } });\nObject.defineProperty(exports, \"integer\", { enumerable: true, get: function () { return parser_2.integer; } });\nObject.defineProperty(exports, \"url\", { enumerable: true, get: function () { return parser_2.url; } });\nObject.defineProperty(exports, \"directory\", { enumerable: true, get: function () { return parser_2.directory; } });\nObject.defineProperty(exports, \"file\", { enumerable: true, get: function () { return parser_2.file; } });\nObject.defineProperty(exports, \"string\", { enumerable: true, get: function () { return parser_2.string; } });\nObject.defineProperty(exports, \"build\", { enumerable: true, get: function () { return parser_2.build; } });\nObject.defineProperty(exports, \"option\", { enumerable: true, get: function () { return parser_2.option; } });\nObject.defineProperty(exports, \"custom\", { enumerable: true, get: function () { return parser_2.custom; } });\nfunction _enum(opts) {\n    return (0, parser_1.custom)({\n        async parse(input) {\n            if (!opts.options.includes(input))\n                throw new Error(`Expected --${this.name}=${input} to be one of: ${opts.options.join(', ')}`);\n            return input;\n        },\n        helpValue: `(${opts.options.join('|')})`,\n        ...opts,\n    })();\n}\nexports._enum = _enum;\nexports.enum = _enum;\nconst version = (opts = {}) => {\n    return (0, parser_1.boolean)({\n        description: 'Show CLI version.',\n        ...opts,\n        parse: async (_, cmd) => {\n            cmd.log(cmd.config.userAgent);\n            cmd.exit(0);\n        },\n    });\n};\nexports.version = version;\nconst help = (opts = {}) => {\n    return (0, parser_1.boolean)({\n        description: 'Show CLI help.',\n        ...opts,\n        parse: async (_, cmd) => {\n            cmd._help();\n        },\n    });\n};\nexports.help = help;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var common = require('./common');\n\nvar fs = require('fs');\n\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines'\n  }\n}); //@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\n\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n  if (!files && !pipe) common.error('no paths given');\n  var idx = 1;\n\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, {\n          continue: true\n        });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true\n        });\n        return;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    var lines = contents.split('\\n');\n\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n\n  return tail.join('\\n');\n}\n\nmodule.exports = _tail;","map":{"version":3,"names":["common","require","fs","register","_tail","canReceivePipe","cmdOptions","options","files","tail","pipe","readFromPipe","error","idx","numLines","Number","arguments","Math","abs","slice","call","unshift","shouldAppendNewline","forEach","file","existsSync","continue","statFollowLinks","isDirectory","contents","readFileSync","lines","split","length","pop","concat","push","join","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/shelljs/src/tail.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n//@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n\n    var lines = contents.split('\\n');\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n  return tail.join('\\n');\n}\nmodule.exports = _tail;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AAEAD,MAAM,CAACG,QAAP,CAAgB,MAAhB,EAAwBC,KAAxB,EAA+B;EAC7BC,cAAc,EAAE,IADa;EAE7BC,UAAU,EAAE;IACV,KAAK;EADK;AAFiB,CAA/B,E,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,KAAT,CAAeG,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,IAAI,GAAGV,MAAM,CAACW,YAAP,EAAX;EAEA,IAAI,CAACH,KAAD,IAAU,CAACE,IAAf,EAAqBV,MAAM,CAACY,KAAP,CAAa,gBAAb;EAErB,IAAIC,GAAG,GAAG,CAAV;;EACA,IAAIN,OAAO,CAACO,QAAR,KAAqB,IAAzB,EAA+B;IAC7BD,GAAG,GAAG,CAAN;IACAN,OAAO,CAACO,QAAR,GAAmBC,MAAM,CAACC,SAAS,CAAC,CAAD,CAAV,CAAzB;EACD,CAHD,MAGO,IAAIT,OAAO,CAACO,QAAR,KAAqB,KAAzB,EAAgC;IACrCP,OAAO,CAACO,QAAR,GAAmB,EAAnB;EACD;;EACDP,OAAO,CAACO,QAAR,GAAmB,CAAC,CAAD,GAAKG,IAAI,CAACC,GAAL,CAASX,OAAO,CAACO,QAAjB,CAAxB;EACAN,KAAK,GAAG,GAAGW,KAAH,CAASC,IAAT,CAAcJ,SAAd,EAAyBH,GAAzB,CAAR;;EAEA,IAAIH,IAAJ,EAAU;IACRF,KAAK,CAACa,OAAN,CAAc,GAAd;EACD;;EAED,IAAIC,mBAAmB,GAAG,KAA1B;EACAd,KAAK,CAACe,OAAN,CAAc,UAAUC,IAAV,EAAgB;IAC5B,IAAIA,IAAI,KAAK,GAAb,EAAkB;MAChB,IAAI,CAACtB,EAAE,CAACuB,UAAH,CAAcD,IAAd,CAAL,EAA0B;QACxBxB,MAAM,CAACY,KAAP,CAAa,gCAAgCY,IAA7C,EAAmD;UAAEE,QAAQ,EAAE;QAAZ,CAAnD;QACA;MACD,CAHD,MAGO,IAAI1B,MAAM,CAAC2B,eAAP,CAAuBH,IAAvB,EAA6BI,WAA7B,EAAJ,EAAgD;QACrD5B,MAAM,CAACY,KAAP,CAAa,oBAAoBY,IAApB,GAA2B,mBAAxC,EAA6D;UAC3DE,QAAQ,EAAE;QADiD,CAA7D;QAGA;MACD;IACF;;IAED,IAAIG,QAAQ,GAAGL,IAAI,KAAK,GAAT,GAAed,IAAf,GAAsBR,EAAE,CAAC4B,YAAH,CAAgBN,IAAhB,EAAsB,MAAtB,CAArC;IAEA,IAAIO,KAAK,GAAGF,QAAQ,CAACG,KAAT,CAAe,IAAf,CAAZ;;IACA,IAAID,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,KAA4B,EAAhC,EAAoC;MAClCF,KAAK,CAACG,GAAN;MACAZ,mBAAmB,GAAG,IAAtB;IACD,CAHD,MAGO;MACLA,mBAAmB,GAAG,KAAtB;IACD;;IAEDb,IAAI,GAAGA,IAAI,CAAC0B,MAAL,CAAYJ,KAAK,CAACZ,KAAN,CAAYZ,OAAO,CAACO,QAApB,CAAZ,CAAP;EACD,CAxBD;;EA0BA,IAAIQ,mBAAJ,EAAyB;IACvBb,IAAI,CAAC2B,IAAL,CAAU,EAAV,EADuB,CACR;EAChB;;EACD,OAAO3B,IAAI,CAAC4B,IAAL,CAAU,IAAV,CAAP;AACD;;AACDC,MAAM,CAACC,OAAP,GAAiBnC,KAAjB"},"metadata":{},"sourceType":"script"}
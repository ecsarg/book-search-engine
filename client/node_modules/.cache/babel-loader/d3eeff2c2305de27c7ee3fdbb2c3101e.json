{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\n\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to a incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\n\n\nvar CallHierarchyPrepareRequest;\n\n(function (CallHierarchyPrepareRequest) {\n  CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n  CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\n\n\nvar CallHierarchyIncomingCallsRequest;\n\n(function (CallHierarchyIncomingCallsRequest) {\n  CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n  CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\n\n\nvar CallHierarchyOutgoingCallsRequest;\n\n(function (CallHierarchyOutgoingCallsRequest) {\n  CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n  CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","CallHierarchyOutgoingCallsRequest","CallHierarchyIncomingCallsRequest","CallHierarchyPrepareRequest","messages_1","require","method","type","ProtocolRequestType"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to a incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\n//# sourceMappingURL=protocol.callHierarchy.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iCAAR,GAA4CF,OAAO,CAACG,iCAAR,GAA4CH,OAAO,CAACI,2BAAR,GAAsC,KAAK,CAAnI;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,2BAAJ;;AACA,CAAC,UAAUA,2BAAV,EAAuC;EACpCA,2BAA2B,CAACG,MAA5B,GAAqC,mCAArC;EACAH,2BAA2B,CAACI,IAA5B,GAAmC,IAAIH,UAAU,CAACI,mBAAf,CAAmCL,2BAA2B,CAACG,MAA/D,CAAnC;AACH,CAHD,EAGGH,2BAA2B,GAAGJ,OAAO,CAACI,2BAAR,KAAwCJ,OAAO,CAACI,2BAAR,GAAsC,EAA9E,CAHjC;AAIA;AACA;AACA;AACA;AACA;;;AACA,IAAID,iCAAJ;;AACA,CAAC,UAAUA,iCAAV,EAA6C;EAC1CA,iCAAiC,CAACI,MAAlC,GAA2C,6BAA3C;EACAJ,iCAAiC,CAACK,IAAlC,GAAyC,IAAIH,UAAU,CAACI,mBAAf,CAAmCN,iCAAiC,CAACI,MAArE,CAAzC;AACH,CAHD,EAGGJ,iCAAiC,GAAGH,OAAO,CAACG,iCAAR,KAA8CH,OAAO,CAACG,iCAAR,GAA4C,EAA1F,CAHvC;AAIA;AACA;AACA;AACA;AACA;;;AACA,IAAID,iCAAJ;;AACA,CAAC,UAAUA,iCAAV,EAA6C;EAC1CA,iCAAiC,CAACK,MAAlC,GAA2C,6BAA3C;EACAL,iCAAiC,CAACM,IAAlC,GAAyC,IAAIH,UAAU,CAACI,mBAAf,CAAmCP,iCAAiC,CAACK,MAArE,CAAzC;AACH,CAHD,EAGGL,iCAAiC,GAAGF,OAAO,CAACE,iCAAR,KAA8CF,OAAO,CAACE,iCAAR,GAA4C,EAA1F,CAHvC"},"metadata":{},"sourceType":"script"}
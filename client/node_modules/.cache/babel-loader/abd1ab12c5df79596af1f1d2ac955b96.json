{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPLOAD_SCHEMA = void 0;\n\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\n\nexports.UPLOAD_SCHEMA = (0, graphql_tag_1.default)`\n  mutation UploadSchema(\n    $id: ID!\n    $schema: IntrospectionSchemaInput!\n    $tag: String!\n    $gitContext: GitContextInput\n  ) {\n    service(id: $id) {\n      uploadSchema(schema: $schema, tag: $tag, gitContext: $gitContext) {\n        code\n        message\n        success\n        tag {\n          tag\n          schema {\n            hash\n          }\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["../../../src/engine/operations/uploadSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,aAAA,GAAgB,CAAA,GAAA,aAAA,CAAA,OAAA,CAAG;;;;;;;;;;;;;;;;;;;;;AAqB/B,CArBY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UPLOAD_SCHEMA = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.UPLOAD_SCHEMA = (0, graphql_tag_1.default) `\n  mutation UploadSchema(\n    $id: ID!\n    $schema: IntrospectionSchemaInput!\n    $tag: String!\n    $gitContext: GitContextInput\n  ) {\n    service(id: $id) {\n      uploadSchema(schema: $schema, tag: $tag, gitContext: $gitContext) {\n        code\n        message\n        success\n        tag {\n          tag\n          schema {\n            hash\n          }\n        }\n      }\n    }\n  }\n`;\n//# sourceMappingURL=uploadSchema.js.map"]},"metadata":{},"sourceType":"script"}
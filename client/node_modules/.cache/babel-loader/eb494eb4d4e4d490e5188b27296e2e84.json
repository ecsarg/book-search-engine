{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\n\nconst ral_1 = require(\"./ral\");\n\nconst Is = require(\"./is\");\n\nconst semaphore_1 = require(\"./semaphore\");\n\nconst events_1 = require(\"./events\");\n\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n\n(function (MessageWriter) {\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) && Is.func(candidate.onError) && Is.func(candidate.write);\n  }\n\n  MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\n\nclass AbstractMessageWriter {\n  constructor() {\n    this.errorEmitter = new events_1.Emitter();\n    this.closeEmitter = new events_1.Emitter();\n  }\n\n  dispose() {\n    this.errorEmitter.dispose();\n    this.closeEmitter.dispose();\n  }\n\n  get onError() {\n    return this.errorEmitter.event;\n  }\n\n  fireError(error, message, count) {\n    this.errorEmitter.fire([this.asError(error), message, count]);\n  }\n\n  get onClose() {\n    return this.closeEmitter.event;\n  }\n\n  fireClose() {\n    this.closeEmitter.fire(undefined);\n  }\n\n  asError(error) {\n    if (error instanceof Error) {\n      return error;\n    } else {\n      return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n    }\n  }\n\n}\n\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n\n(function (ResolvedMessageWriterOptions) {\n  function fromOptions(options) {\n    var _a, _b;\n\n    if (options === undefined || typeof options === 'string') {\n      return {\n        charset: options !== null && options !== void 0 ? options : 'utf-8',\n        contentTypeEncoder: ral_1.default().applicationJson.encoder\n      };\n    } else {\n      return {\n        charset: (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8',\n        contentEncoder: options.contentEncoder,\n        contentTypeEncoder: (_b = options.contentTypeEncoder) !== null && _b !== void 0 ? _b : ral_1.default().applicationJson.encoder\n      };\n    }\n  }\n\n  ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\n\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n  constructor(writable, options) {\n    super();\n    this.writable = writable;\n    this.options = ResolvedMessageWriterOptions.fromOptions(options);\n    this.errorCount = 0;\n    this.writeSemaphore = new semaphore_1.Semaphore(1);\n    this.writable.onError(error => this.fireError(error));\n    this.writable.onClose(() => this.fireClose());\n  }\n\n  async write(msg) {\n    return this.writeSemaphore.lock(async () => {\n      const payload = this.options.contentTypeEncoder.encode(msg, this.options).then(buffer => {\n        if (this.options.contentEncoder !== undefined) {\n          return this.options.contentEncoder.encode(buffer);\n        } else {\n          return buffer;\n        }\n      });\n      return payload.then(buffer => {\n        const headers = [];\n        headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n        headers.push(CRLF);\n        return this.doWrite(msg, headers, buffer);\n      }, error => {\n        this.fireError(error);\n        throw error;\n      });\n    });\n  }\n\n  async doWrite(msg, headers, data) {\n    try {\n      await this.writable.write(headers.join(''), 'ascii');\n      return this.writable.write(data);\n    } catch (error) {\n      this.handleError(error, msg);\n      return Promise.reject(error);\n    }\n  }\n\n  handleError(error, msg) {\n    this.errorCount++;\n    this.fireError(error, msg, this.errorCount);\n  }\n\n  end() {\n    this.writable.end();\n  }\n\n}\n\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;","map":{"version":3,"names":["Object","defineProperty","exports","value","WriteableStreamMessageWriter","AbstractMessageWriter","MessageWriter","ral_1","require","Is","semaphore_1","events_1","ContentLength","CRLF","is","candidate","func","dispose","onClose","onError","write","constructor","errorEmitter","Emitter","closeEmitter","event","fireError","error","message","count","fire","asError","fireClose","undefined","Error","string","ResolvedMessageWriterOptions","fromOptions","options","_a","_b","charset","contentTypeEncoder","default","applicationJson","encoder","contentEncoder","writable","errorCount","writeSemaphore","Semaphore","msg","lock","payload","encode","then","buffer","headers","push","byteLength","toString","doWrite","data","join","handleError","Promise","reject","end"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-jsonrpc/lib/common/messageWriter.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        var _a, _b;\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options !== null && options !== void 0 ? options : 'utf-8', contentTypeEncoder: ral_1.default().applicationJson.encoder };\n        }\n        else {\n            return { charset: (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: (_b = options.contentTypeEncoder) !== null && _b !== void 0 ? _b : ral_1.default().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n//# sourceMappingURL=messageWriter.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
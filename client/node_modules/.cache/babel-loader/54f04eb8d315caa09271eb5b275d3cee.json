{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSet = void 0;\n\nconst glob_1 = __importDefault(require(\"glob\"));\n\nconst apollo_tools_1 = require(\"@apollographql/apollo-tools\");\n\nconst utilities_1 = require(\"./utilities\");\n\nclass FileSet {\n  constructor({\n    rootURI,\n    includes,\n    excludes,\n    configURI\n  }) {\n    (0, apollo_tools_1.invariant)(rootURI, `Must provide \"rootURI\".`);\n    (0, apollo_tools_1.invariant)(includes, `Must provide \"includes\".`);\n    (0, apollo_tools_1.invariant)(excludes, `Must provide \"excludes\".`);\n    this.rootURI = rootURI;\n    this.includes = includes;\n    this.excludes = excludes;\n  }\n\n  includesFile(filePath) {\n    return this.allFiles().includes((0, utilities_1.normalizeURI)(filePath));\n  }\n\n  allFiles() {\n    const joinedIncludes = `{${this.includes.join(\",\")}}`;\n    return glob_1.default.sync(joinedIncludes, {\n      cwd: this.rootURI.fsPath,\n      absolute: true,\n      ignore: this.excludes\n    }).map(utilities_1.normalizeURI);\n  }\n\n}\n\nexports.FileSet = FileSet;","map":{"version":3,"sources":["../src/fileSet.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,MAAa,OAAb,CAAoB;EAKlB,WAAA,CAAY;IACV,OADU;IAEV,QAFU;IAGV,QAHU;IAIV;EAJU,CAAZ,EAUC;IACC,CAAA,GAAA,cAAA,CAAA,SAAA,EAAU,OAAV,EAAmB,yBAAnB;IACA,CAAA,GAAA,cAAA,CAAA,SAAA,EAAU,QAAV,EAAoB,0BAApB;IACA,CAAA,GAAA,cAAA,CAAA,SAAA,EAAU,QAAV,EAAoB,0BAApB;IAEA,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,QAAL,GAAgB,QAAhB;IACA,KAAK,QAAL,GAAgB,QAAhB;EACD;;EAED,YAAY,CAAC,QAAD,EAAiB;IAC3B,OAAO,KAAK,QAAL,GAAgB,QAAhB,CAAyB,CAAA,GAAA,WAAA,CAAA,YAAA,EAAa,QAAb,CAAzB,CAAP;EACD;;EAED,QAAQ,GAAA;IAIN,MAAM,cAAc,GAAG,IAAI,KAAK,QAAL,CAAc,IAAd,CAAmB,GAAnB,CAAuB,GAAlD;IACA,OAAO,MAAA,CAAA,OAAA,CACJ,IADI,CACC,cADD,EACiB;MACpB,GAAG,EAAE,KAAK,OAAL,CAAa,MADE;MAEpB,QAAQ,EAAE,IAFU;MAGpB,MAAM,EAAE,KAAK;IAHO,CADjB,EAMJ,GANI,CAMA,WAAA,CAAA,YANA,CAAP;EAOD;;AAzCiB;;AAApB,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileSet = void 0;\nconst glob_1 = __importDefault(require(\"glob\"));\nconst apollo_tools_1 = require(\"@apollographql/apollo-tools\");\nconst utilities_1 = require(\"./utilities\");\nclass FileSet {\n    constructor({ rootURI, includes, excludes, configURI, }) {\n        (0, apollo_tools_1.invariant)(rootURI, `Must provide \"rootURI\".`);\n        (0, apollo_tools_1.invariant)(includes, `Must provide \"includes\".`);\n        (0, apollo_tools_1.invariant)(excludes, `Must provide \"excludes\".`);\n        this.rootURI = rootURI;\n        this.includes = includes;\n        this.excludes = excludes;\n    }\n    includesFile(filePath) {\n        return this.allFiles().includes((0, utilities_1.normalizeURI)(filePath));\n    }\n    allFiles() {\n        const joinedIncludes = `{${this.includes.join(\",\")}}`;\n        return glob_1.default\n            .sync(joinedIncludes, {\n            cwd: this.rootURI.fsPath,\n            absolute: true,\n            ignore: this.excludes,\n        })\n            .map(utilities_1.normalizeURI);\n    }\n}\nexports.FileSet = FileSet;\n//# sourceMappingURL=fileSet.js.map"]},"metadata":{},"sourceType":"script"}
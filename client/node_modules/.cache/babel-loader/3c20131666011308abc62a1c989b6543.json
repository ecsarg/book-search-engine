{"ast":null,"code":"/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\n\nfunction boolean(value) {\n  return value === true || value === false;\n}\n\nexports.boolean = boolean;\n\nfunction string(value) {\n  return typeof value === 'string' || value instanceof String;\n}\n\nexports.string = string;\n\nfunction number(value) {\n  return typeof value === 'number' || value instanceof Number;\n}\n\nexports.number = number;\n\nfunction error(value) {\n  return value instanceof Error;\n}\n\nexports.error = error;\n\nfunction func(value) {\n  return typeof value === 'function';\n}\n\nexports.func = func;\n\nfunction array(value) {\n  return Array.isArray(value);\n}\n\nexports.array = array;\n\nfunction stringArray(value) {\n  return array(value) && value.every(elem => string(elem));\n}\n\nexports.stringArray = stringArray;\n\nfunction typedArray(value, check) {\n  return Array.isArray(value) && value.every(check);\n}\n\nexports.typedArray = typedArray;\n\nfunction objectLiteral(value) {\n  // Strictly speaking class instances pass this check as well. Since the LSP\n  // doesn't use classes we ignore this for now. If we do we need to add something\n  // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n  return value !== null && typeof value === 'object';\n}\n\nexports.objectLiteral = objectLiteral;","map":{"version":3,"names":["Object","defineProperty","exports","value","objectLiteral","typedArray","stringArray","array","func","error","number","string","boolean","String","Number","Error","Array","isArray","every","elem","check"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver-protocol/lib/common/utils/is.js"],"sourcesContent":["/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n//# sourceMappingURL=is.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACO,KAAR,GAAgBP,OAAO,CAACQ,MAAR,GAAiBR,OAAO,CAACS,MAAR,GAAiBT,OAAO,CAACU,OAAR,GAAkB,KAAK,CAA3K;;AACA,SAASA,OAAT,CAAiBT,KAAjB,EAAwB;EACpB,OAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAnC;AACH;;AACDD,OAAO,CAACU,OAAR,GAAkBA,OAAlB;;AACA,SAASD,MAAT,CAAgBR,KAAhB,EAAuB;EACnB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYU,MAArD;AACH;;AACDX,OAAO,CAACS,MAAR,GAAiBA,MAAjB;;AACA,SAASD,MAAT,CAAgBP,KAAhB,EAAuB;EACnB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYW,MAArD;AACH;;AACDZ,OAAO,CAACQ,MAAR,GAAiBA,MAAjB;;AACA,SAASD,KAAT,CAAeN,KAAf,EAAsB;EAClB,OAAOA,KAAK,YAAYY,KAAxB;AACH;;AACDb,OAAO,CAACO,KAAR,GAAgBA,KAAhB;;AACA,SAASD,IAAT,CAAcL,KAAd,EAAqB;EACjB,OAAO,OAAOA,KAAP,KAAiB,UAAxB;AACH;;AACDD,OAAO,CAACM,IAAR,GAAeA,IAAf;;AACA,SAASD,KAAT,CAAeJ,KAAf,EAAsB;EAClB,OAAOa,KAAK,CAACC,OAAN,CAAcd,KAAd,CAAP;AACH;;AACDD,OAAO,CAACK,KAAR,GAAgBA,KAAhB;;AACA,SAASD,WAAT,CAAqBH,KAArB,EAA4B;EACxB,OAAOI,KAAK,CAACJ,KAAD,CAAL,IAAgBA,KAAK,CAACe,KAAN,CAAYC,IAAI,IAAIR,MAAM,CAACQ,IAAD,CAA1B,CAAvB;AACH;;AACDjB,OAAO,CAACI,WAAR,GAAsBA,WAAtB;;AACA,SAASD,UAAT,CAAoBF,KAApB,EAA2BiB,KAA3B,EAAkC;EAC9B,OAAOJ,KAAK,CAACC,OAAN,CAAcd,KAAd,KAAwBA,KAAK,CAACe,KAAN,CAAYE,KAAZ,CAA/B;AACH;;AACDlB,OAAO,CAACG,UAAR,GAAqBA,UAArB;;AACA,SAASD,aAAT,CAAuBD,KAAvB,EAA8B;EAC1B;EACA;EACA;EACA,OAAOA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAA1C;AACH;;AACDD,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}
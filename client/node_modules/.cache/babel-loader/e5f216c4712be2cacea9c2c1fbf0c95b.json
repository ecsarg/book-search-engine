{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\n\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\n\n\nvar FileOperationPatternKind;\n\n(function (FileOperationPatternKind) {\n  /**\n   * The pattern matches a file only.\n   */\n  FileOperationPatternKind.file = 'file';\n  /**\n   * The pattern matches a folder only.\n   */\n\n  FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar WillCreateFilesRequest;\n\n(function (WillCreateFilesRequest) {\n  WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n  WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar DidCreateFilesNotification;\n\n(function (DidCreateFilesNotification) {\n  DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n  DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar WillRenameFilesRequest;\n\n(function (WillRenameFilesRequest) {\n  WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n  WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar DidRenameFilesNotification;\n\n(function (DidRenameFilesNotification) {\n  DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n  DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar DidDeleteFilesNotification;\n\n(function (DidDeleteFilesNotification) {\n  DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n  DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\n\n\nvar WillDeleteFilesRequest;\n\n(function (WillDeleteFilesRequest) {\n  WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n  WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","WillDeleteFilesRequest","DidDeleteFilesNotification","DidRenameFilesNotification","WillRenameFilesRequest","DidCreateFilesNotification","WillCreateFilesRequest","FileOperationPatternKind","messages_1","require","file","folder","method","type","ProtocolRequestType","ProtocolNotificationType"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));\n//# sourceMappingURL=protocol.fileOperations.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
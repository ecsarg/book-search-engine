{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ral_1 = require(\"../common/ral\");\n\nconst disposable_1 = require(\"../common/disposable\");\n\nconst events_1 = require(\"../common/events\");\n\nconst messageBuffer_1 = require(\"../common/messageBuffer\");\n\nclass MessageBuffer extends messageBuffer_1.AbstractMessageBuffer {\n  constructor(encoding = 'utf-8') {\n    super(encoding);\n    this.asciiDecoder = new TextDecoder('ascii');\n  }\n\n  emptyBuffer() {\n    return MessageBuffer.emptyBuffer;\n  }\n\n  fromString(value, _encoding) {\n    return new TextEncoder().encode(value);\n  }\n\n  toString(value, encoding) {\n    if (encoding === 'ascii') {\n      return this.asciiDecoder.decode(value);\n    } else {\n      return new TextDecoder(encoding).decode(value);\n    }\n  }\n\n  asNative(buffer, length) {\n    if (length === undefined) {\n      return buffer;\n    } else {\n      return buffer.slice(0, length);\n    }\n  }\n\n  allocNative(length) {\n    return new Uint8Array(length);\n  }\n\n}\n\nMessageBuffer.emptyBuffer = new Uint8Array(0);\n\nclass ReadableStreamWrapper {\n  constructor(socket) {\n    this.socket = socket;\n    this._onData = new events_1.Emitter();\n\n    this._messageListener = event => {\n      const blob = event.data;\n      blob.arrayBuffer().then(buffer => {\n        this._onData.fire(new Uint8Array(buffer));\n      });\n    };\n\n    this.socket.addEventListener('message', this._messageListener);\n  }\n\n  onClose(listener) {\n    this.socket.addEventListener('close', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n  }\n\n  onError(listener) {\n    this.socket.addEventListener('error', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n  }\n\n  onEnd(listener) {\n    this.socket.addEventListener('end', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n  }\n\n  onData(listener) {\n    return this._onData.event(listener);\n  }\n\n}\n\nclass WritableStreamWrapper {\n  constructor(socket) {\n    this.socket = socket;\n  }\n\n  onClose(listener) {\n    this.socket.addEventListener('close', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n  }\n\n  onError(listener) {\n    this.socket.addEventListener('error', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n  }\n\n  onEnd(listener) {\n    this.socket.addEventListener('end', listener);\n    return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n  }\n\n  write(data, encoding) {\n    if (typeof data === 'string') {\n      if (encoding !== undefined && encoding !== 'utf-8') {\n        throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${encoding}`);\n      }\n\n      this.socket.send(data);\n    } else {\n      this.socket.send(data);\n    }\n\n    return Promise.resolve();\n  }\n\n  end() {\n    this.socket.close();\n  }\n\n}\n\nconst _textEncoder = new TextEncoder();\n\nconst _ril = Object.freeze({\n  messageBuffer: Object.freeze({\n    create: encoding => new MessageBuffer(encoding)\n  }),\n  applicationJson: Object.freeze({\n    encoder: Object.freeze({\n      name: 'application/json',\n      encode: (msg, options) => {\n        if (options.charset !== 'utf-8') {\n          throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${options.charset}`);\n        }\n\n        return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));\n      }\n    }),\n    decoder: Object.freeze({\n      name: 'application/json',\n      decode: (buffer, options) => {\n        if (!(buffer instanceof Uint8Array)) {\n          throw new Error(`In a Browser environments only Uint8Arrays are supported.`);\n        }\n\n        return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));\n      }\n    })\n  }),\n  stream: Object.freeze({\n    asReadableStream: socket => new ReadableStreamWrapper(socket),\n    asWritableStream: socket => new WritableStreamWrapper(socket)\n  }),\n  console: console,\n  timer: Object.freeze({\n    setTimeout(callback, ms, ...args) {\n      return setTimeout(callback, ms, ...args);\n    },\n\n    clearTimeout(handle) {\n      clearTimeout(handle);\n    },\n\n    setImmediate(callback, ...args) {\n      return setTimeout(callback, 0, ...args);\n    },\n\n    clearImmediate(handle) {\n      clearTimeout(handle);\n    }\n\n  })\n});\n\nfunction RIL() {\n  return _ril;\n}\n\n(function (RIL) {\n  function install() {\n    ral_1.default.install(_ril);\n  }\n\n  RIL.install = install;\n})(RIL || (RIL = {}));\n\nexports.default = RIL;","map":{"version":3,"names":["Object","defineProperty","exports","value","ral_1","require","disposable_1","events_1","messageBuffer_1","MessageBuffer","AbstractMessageBuffer","constructor","encoding","asciiDecoder","TextDecoder","emptyBuffer","fromString","_encoding","TextEncoder","encode","toString","decode","asNative","buffer","length","undefined","slice","allocNative","Uint8Array","ReadableStreamWrapper","socket","_onData","Emitter","_messageListener","event","blob","data","arrayBuffer","then","fire","addEventListener","onClose","listener","Disposable","create","removeEventListener","onError","onEnd","onData","WritableStreamWrapper","write","Error","send","Promise","resolve","end","close","_textEncoder","_ril","freeze","messageBuffer","applicationJson","encoder","name","msg","options","charset","JSON","stringify","decoder","parse","stream","asReadableStream","asWritableStream","console","timer","setTimeout","callback","ms","args","clearTimeout","handle","setImmediate","clearImmediate","RIL","install","default"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-jsonrpc/lib/browser/ril.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ral_1 = require(\"../common/ral\");\nconst disposable_1 = require(\"../common/disposable\");\nconst events_1 = require(\"../common/events\");\nconst messageBuffer_1 = require(\"../common/messageBuffer\");\nclass MessageBuffer extends messageBuffer_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n        this.asciiDecoder = new TextDecoder('ascii');\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, _encoding) {\n        return (new TextEncoder()).encode(value);\n    }\n    toString(value, encoding) {\n        if (encoding === 'ascii') {\n            return this.asciiDecoder.decode(value);\n        }\n        else {\n            return (new TextDecoder(encoding)).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer;\n        }\n        else {\n            return buffer.slice(0, length);\n        }\n    }\n    allocNative(length) {\n        return new Uint8Array(length);\n    }\n}\nMessageBuffer.emptyBuffer = new Uint8Array(0);\nclass ReadableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n        this._onData = new events_1.Emitter();\n        this._messageListener = (event) => {\n            const blob = event.data;\n            blob.arrayBuffer().then((buffer) => {\n                this._onData.fire(new Uint8Array(buffer));\n            });\n        };\n        this.socket.addEventListener('message', this._messageListener);\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    onData(listener) {\n        return this._onData.event(listener);\n    }\n}\nclass WritableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return disposable_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    write(data, encoding) {\n        if (typeof data === 'string') {\n            if (encoding !== undefined && encoding !== 'utf-8') {\n                throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${encoding}`);\n            }\n            this.socket.send(data);\n        }\n        else {\n            this.socket.send(data);\n        }\n        return Promise.resolve();\n    }\n    end() {\n        this.socket.close();\n    }\n}\nconst _textEncoder = new TextEncoder();\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                if (options.charset !== 'utf-8') {\n                    throw new Error(`In a Browser environments only utf-8 text encding is supported. But got encoding: ${options.charset}`);\n                }\n                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                if (!(buffer instanceof Uint8Array)) {\n                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);\n                }\n                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (socket) => new ReadableStreamWrapper(socket),\n        asWritableStream: (socket) => new WritableStreamWrapper(socket)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            return setTimeout(callback, ms, ...args);\n        },\n        clearTimeout(handle) {\n            clearTimeout(handle);\n        },\n        setImmediate(callback, ...args) {\n            return setTimeout(callback, 0, ...args);\n        },\n        clearImmediate(handle) {\n            clearTimeout(handle);\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        ral_1.default.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n//# sourceMappingURL=ril.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
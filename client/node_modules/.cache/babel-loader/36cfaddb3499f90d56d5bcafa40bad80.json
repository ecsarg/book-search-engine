{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitter = exports.Event = void 0;\n\nconst ral_1 = require(\"./ral\");\n\nvar Event;\n\n(function (Event) {\n  const _disposable = {\n    dispose() {}\n\n  };\n\n  Event.None = function () {\n    return _disposable;\n  };\n})(Event = exports.Event || (exports.Event = {}));\n\nclass CallbackList {\n  add(callback, context = null, bucket) {\n    if (!this._callbacks) {\n      this._callbacks = [];\n      this._contexts = [];\n    }\n\n    this._callbacks.push(callback);\n\n    this._contexts.push(context);\n\n    if (Array.isArray(bucket)) {\n      bucket.push({\n        dispose: () => this.remove(callback, context)\n      });\n    }\n  }\n\n  remove(callback, context = null) {\n    if (!this._callbacks) {\n      return;\n    }\n\n    let foundCallbackWithDifferentContext = false;\n\n    for (let i = 0, len = this._callbacks.length; i < len; i++) {\n      if (this._callbacks[i] === callback) {\n        if (this._contexts[i] === context) {\n          // callback & context match => remove it\n          this._callbacks.splice(i, 1);\n\n          this._contexts.splice(i, 1);\n\n          return;\n        } else {\n          foundCallbackWithDifferentContext = true;\n        }\n      }\n    }\n\n    if (foundCallbackWithDifferentContext) {\n      throw new Error('When adding a listener with a context, you should remove it with the same context');\n    }\n  }\n\n  invoke(...args) {\n    if (!this._callbacks) {\n      return [];\n    }\n\n    const ret = [],\n          callbacks = this._callbacks.slice(0),\n          contexts = this._contexts.slice(0);\n\n    for (let i = 0, len = callbacks.length; i < len; i++) {\n      try {\n        ret.push(callbacks[i].apply(contexts[i], args));\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        ral_1.default().console.error(e);\n      }\n    }\n\n    return ret;\n  }\n\n  isEmpty() {\n    return !this._callbacks || this._callbacks.length === 0;\n  }\n\n  dispose() {\n    this._callbacks = undefined;\n    this._contexts = undefined;\n  }\n\n}\n\nclass Emitter {\n  constructor(_options) {\n    this._options = _options;\n  }\n  /**\n   * For the public to allow to subscribe\n   * to events from this Emitter\n   */\n\n\n  get event() {\n    if (!this._event) {\n      this._event = (listener, thisArgs, disposables) => {\n        if (!this._callbacks) {\n          this._callbacks = new CallbackList();\n        }\n\n        if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n          this._options.onFirstListenerAdd(this);\n        }\n\n        this._callbacks.add(listener, thisArgs);\n\n        const result = {\n          dispose: () => {\n            if (!this._callbacks) {\n              // disposable is disposed after emitter is disposed.\n              return;\n            }\n\n            this._callbacks.remove(listener, thisArgs);\n\n            result.dispose = Emitter._noop;\n\n            if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n              this._options.onLastListenerRemove(this);\n            }\n          }\n        };\n\n        if (Array.isArray(disposables)) {\n          disposables.push(result);\n        }\n\n        return result;\n      };\n    }\n\n    return this._event;\n  }\n  /**\n   * To be kept private to fire an event to\n   * subscribers\n   */\n\n\n  fire(event) {\n    if (this._callbacks) {\n      this._callbacks.invoke.call(this._callbacks, event);\n    }\n  }\n\n  dispose() {\n    if (this._callbacks) {\n      this._callbacks.dispose();\n\n      this._callbacks = undefined;\n    }\n  }\n\n}\n\nexports.Emitter = Emitter;\n\nEmitter._noop = function () {};","map":{"version":3,"names":["Object","defineProperty","exports","value","Emitter","Event","ral_1","require","_disposable","dispose","None","CallbackList","add","callback","context","bucket","_callbacks","_contexts","push","Array","isArray","remove","foundCallbackWithDifferentContext","i","len","length","splice","Error","invoke","args","ret","callbacks","slice","contexts","apply","e","default","console","error","isEmpty","undefined","constructor","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","result","_noop","onLastListenerRemove","fire","call"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-jsonrpc/lib/common/events.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                ral_1.default().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n//# sourceMappingURL=events.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
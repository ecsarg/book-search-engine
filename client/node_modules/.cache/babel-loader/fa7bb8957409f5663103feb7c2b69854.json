{"ast":null,"code":"'use strict';\n\nvar redeyed = require('redeyed');\n\nvar theme = require('../themes/default');\n\nvar colors = require('ansicolors');\n\nvar colorSurround = colors.brightBlack;\nvar surroundClose = '\\u001b[39m';\n\nfunction trimEmptyLines(lines) {\n  // remove lines from the end until we find a non-empy one\n  var line = lines.pop();\n\n  while (!line || !line.length) {\n    line = lines.pop();\n  } // put the non-empty line back\n\n\n  if (line) lines.push(line);\n}\n\nfunction addLinenos(highlightedCode, firstline) {\n  var highlightedLines = highlightedCode.split('\\n');\n  trimEmptyLines(highlightedLines);\n  var linesLen = highlightedLines.length;\n  var lines = [];\n  var totalDigits;\n  var lineno;\n\n  function getDigits(n) {\n    if (n < 10) return 1;\n    if (n < 100) return 2;\n    if (n < 1000) return 3;\n    if (n < 10000) return 4; // this works for up to 99,999 lines - any questions?\n\n    return 5;\n  }\n\n  function pad(n, totalDigits) {\n    // not pretty, but simple and should perform quite well\n    var padDigits = totalDigits - getDigits(n);\n\n    switch (padDigits) {\n      case 0:\n        return '' + n;\n\n      case 1:\n        return ' ' + n;\n\n      case 2:\n        return '  ' + n;\n\n      case 3:\n        return '   ' + n;\n\n      case 4:\n        return '    ' + n;\n\n      case 5:\n        return '     ' + n;\n    }\n  }\n\n  totalDigits = getDigits(linesLen + firstline - 1);\n\n  for (var i = 0; i < linesLen; i++) {\n    // Don't close the escape sequence here in order to not break multi line code highlights like block comments\n    lineno = colorSurround(pad(i + firstline, totalDigits) + ': ').replace(surroundClose, '');\n    lines.push(lineno + highlightedLines[i]);\n  }\n\n  return lines.join('\\n');\n}\n\nmodule.exports = function highlight(code, opts) {\n  opts = opts || {};\n\n  try {\n    var result = redeyed(code, opts.theme || theme, {\n      jsx: !!opts.jsx\n    });\n    var firstline = opts.firstline && !isNaN(opts.firstline) ? opts.firstline : 1;\n    return opts.linenos ? addLinenos(result.code, firstline) : result.code;\n  } catch (e) {\n    e.message = 'Unable to perform highlight. The code contained syntax errors: ' + e.message;\n    throw e;\n  }\n};","map":{"version":3,"names":["redeyed","require","theme","colors","colorSurround","brightBlack","surroundClose","trimEmptyLines","lines","line","pop","length","push","addLinenos","highlightedCode","firstline","highlightedLines","split","linesLen","totalDigits","lineno","getDigits","n","pad","padDigits","i","replace","join","module","exports","highlight","code","opts","result","jsx","isNaN","linenos","e","message"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/cardinal/lib/highlight.js"],"sourcesContent":["'use strict'\n\nvar redeyed =  require('redeyed')\nvar theme   =  require('../themes/default')\nvar colors  =  require('ansicolors')\n\nvar colorSurround =  colors.brightBlack\nvar surroundClose =  '\\u001b[39m'\n\nfunction trimEmptyLines(lines) {\n  // remove lines from the end until we find a non-empy one\n  var line = lines.pop()\n  while (!line || !line.length)    {\n line = lines.pop()\n}\n\n  // put the non-empty line back\n  if (line) lines.push(line)\n}\n\nfunction addLinenos(highlightedCode, firstline) {\n  var highlightedLines = highlightedCode.split('\\n')\n\n  trimEmptyLines(highlightedLines)\n\n  var linesLen = highlightedLines.length\n  var lines = []\n  var totalDigits\n  var lineno\n\n  function getDigits(n) {\n    if (n < 10) return 1\n    if (n < 100) return 2\n    if (n < 1000) return 3\n    if (n < 10000) return 4\n    // this works for up to 99,999 lines - any questions?\n    return 5\n  }\n\n  function pad(n, totalDigits) {\n    // not pretty, but simple and should perform quite well\n    var padDigits = totalDigits - getDigits(n)\n    switch (padDigits) {\n      case 0: return '' + n\n      case 1: return ' ' + n\n      case 2: return '  ' + n\n      case 3: return '   ' + n\n      case 4: return '    ' + n\n      case 5: return '     ' + n\n    }\n  }\n\n  totalDigits = getDigits(linesLen + firstline - 1)\n\n  for (var i = 0; i < linesLen; i++) {\n    // Don't close the escape sequence here in order to not break multi line code highlights like block comments\n    lineno = colorSurround(pad(i + firstline, totalDigits) + ': ').replace(surroundClose, '')\n    lines.push(lineno + highlightedLines[i])\n  }\n\n  return lines.join('\\n')\n}\n\nmodule.exports = function highlight(code, opts) {\n  opts = opts || { }\n  try {\n    var result = redeyed(code, opts.theme || theme, { jsx: !!opts.jsx })\n    var firstline = opts.firstline && !isNaN(opts.firstline) ? opts.firstline : 1\n\n    return opts.linenos ? addLinenos(result.code, firstline) : result.code\n  } catch (e) {\n    e.message = 'Unable to perform highlight. The code contained syntax errors: ' + e.message\n    throw e\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
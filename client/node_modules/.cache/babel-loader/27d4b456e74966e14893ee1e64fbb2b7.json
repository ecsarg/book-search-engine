{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;\n\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\n\nconst uuid_1 = require(\"./utils/uuid\");\n\nclass WorkDoneProgressReporterImpl {\n  constructor(_connection, _token) {\n    this._connection = _connection;\n    this._token = _token;\n    WorkDoneProgressReporterImpl.Instances.set(this._token, this);\n  }\n\n  begin(title, percentage, message, cancellable) {\n    let param = {\n      kind: 'begin',\n      title,\n      percentage,\n      message,\n      cancellable\n    };\n\n    this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n  }\n\n  report(arg0, arg1) {\n    let param = {\n      kind: 'report'\n    };\n\n    if (typeof arg0 === 'number') {\n      param.percentage = arg0;\n\n      if (arg1 !== undefined) {\n        param.message = arg1;\n      }\n    } else {\n      param.message = arg0;\n    }\n\n    this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n  }\n\n  done() {\n    WorkDoneProgressReporterImpl.Instances.delete(this._token);\n\n    this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, {\n      kind: 'end'\n    });\n  }\n\n}\n\nWorkDoneProgressReporterImpl.Instances = new Map();\n\nclass WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {\n  constructor(connection, token) {\n    super(connection, token);\n    this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n  }\n\n  get token() {\n    return this._source.token;\n  }\n\n  done() {\n    this._source.dispose();\n\n    super.done();\n  }\n\n  cancel() {\n    this._source.cancel();\n  }\n\n}\n\nclass NullProgressReporter {\n  constructor() {}\n\n  begin() {}\n\n  report() {}\n\n  done() {}\n\n}\n\nclass NullProgressServerReporter extends NullProgressReporter {\n  constructor() {\n    super();\n    this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n  }\n\n  get token() {\n    return this._source.token;\n  }\n\n  done() {\n    this._source.dispose();\n  }\n\n  cancel() {\n    this._source.cancel();\n  }\n\n}\n\nfunction attachWorkDone(connection, params) {\n  if (params === undefined || params.workDoneToken === undefined) {\n    return new NullProgressReporter();\n  }\n\n  const token = params.workDoneToken;\n  delete params.workDoneToken;\n  return new WorkDoneProgressReporterImpl(connection, token);\n}\n\nexports.attachWorkDone = attachWorkDone;\n\nconst ProgressFeature = Base => {\n  return class extends Base {\n    constructor() {\n      super();\n      this._progressSupported = false;\n    }\n\n    initialize(capabilities) {\n      var _a;\n\n      if (((_a = capabilities === null || capabilities === void 0 ? void 0 : capabilities.window) === null || _a === void 0 ? void 0 : _a.workDoneProgress) === true) {\n        this._progressSupported = true;\n        this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, params => {\n          let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);\n\n          if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {\n            progress.cancel();\n          }\n        });\n      }\n    }\n\n    attachWorkDoneProgress(token) {\n      if (token === undefined) {\n        return new NullProgressReporter();\n      } else {\n        return new WorkDoneProgressReporterImpl(this.connection, token);\n      }\n    }\n\n    createWorkDoneProgress() {\n      if (this._progressSupported) {\n        const token = uuid_1.generateUuid();\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, {\n          token\n        }).then(() => {\n          const result = new WorkDoneProgressServerReporterImpl(this.connection, token);\n          return result;\n        });\n      } else {\n        return Promise.resolve(new NullProgressServerReporter());\n      }\n    }\n\n  };\n};\n\nexports.ProgressFeature = ProgressFeature;\nvar ResultProgress;\n\n(function (ResultProgress) {\n  ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\n})(ResultProgress || (ResultProgress = {}));\n\nclass ResultProgressReporterImpl {\n  constructor(_connection, _token) {\n    this._connection = _connection;\n    this._token = _token;\n  }\n\n  report(data) {\n    this._connection.sendProgress(ResultProgress.type, this._token, data);\n  }\n\n}\n\nfunction attachPartialResult(connection, params) {\n  if (params === undefined || params.partialResultToken === undefined) {\n    return undefined;\n  }\n\n  const token = params.partialResultToken;\n  delete params.partialResultToken;\n  return new ResultProgressReporterImpl(connection, token);\n}\n\nexports.attachPartialResult = attachPartialResult;","map":{"version":3,"names":["Object","defineProperty","exports","value","attachPartialResult","ProgressFeature","attachWorkDone","vscode_languageserver_protocol_1","require","uuid_1","WorkDoneProgressReporterImpl","constructor","_connection","_token","Instances","set","begin","title","percentage","message","cancellable","param","kind","sendProgress","WorkDoneProgress","type","report","arg0","arg1","undefined","done","delete","Map","WorkDoneProgressServerReporterImpl","connection","token","_source","CancellationTokenSource","dispose","cancel","NullProgressReporter","NullProgressServerReporter","params","workDoneToken","Base","_progressSupported","initialize","capabilities","_a","window","workDoneProgress","onNotification","WorkDoneProgressCancelNotification","progress","get","attachWorkDoneProgress","createWorkDoneProgress","generateUuid","sendRequest","WorkDoneProgressCreateRequest","then","result","Promise","resolve","ResultProgress","ProgressType","ResultProgressReporterImpl","data","partialResultToken"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver/lib/common/progress.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst uuid_1 = require(\"./utils/uuid\");\nclass WorkDoneProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n        WorkDoneProgressReporterImpl.Instances.set(this._token, this);\n    }\n    begin(title, percentage, message, cancellable) {\n        let param = {\n            kind: 'begin',\n            title,\n            percentage,\n            message,\n            cancellable\n        };\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    report(arg0, arg1) {\n        let param = {\n            kind: 'report'\n        };\n        if (typeof arg0 === 'number') {\n            param.percentage = arg0;\n            if (arg1 !== undefined) {\n                param.message = arg1;\n            }\n        }\n        else {\n            param.message = arg0;\n        }\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    done() {\n        WorkDoneProgressReporterImpl.Instances.delete(this._token);\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\n    }\n}\nWorkDoneProgressReporterImpl.Instances = new Map();\nclass WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {\n    constructor(connection, token) {\n        super(connection, token);\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n        super.done();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nclass NullProgressReporter {\n    constructor() {\n    }\n    begin() {\n    }\n    report() {\n    }\n    done() {\n    }\n}\nclass NullProgressServerReporter extends NullProgressReporter {\n    constructor() {\n        super();\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction attachWorkDone(connection, params) {\n    if (params === undefined || params.workDoneToken === undefined) {\n        return new NullProgressReporter();\n    }\n    const token = params.workDoneToken;\n    delete params.workDoneToken;\n    return new WorkDoneProgressReporterImpl(connection, token);\n}\nexports.attachWorkDone = attachWorkDone;\nconst ProgressFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._progressSupported = false;\n        }\n        initialize(capabilities) {\n            var _a;\n            if (((_a = capabilities === null || capabilities === void 0 ? void 0 : capabilities.window) === null || _a === void 0 ? void 0 : _a.workDoneProgress) === true) {\n                this._progressSupported = true;\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\n                    let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);\n                    if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {\n                        progress.cancel();\n                    }\n                });\n            }\n        }\n        attachWorkDoneProgress(token) {\n            if (token === undefined) {\n                return new NullProgressReporter();\n            }\n            else {\n                return new WorkDoneProgressReporterImpl(this.connection, token);\n            }\n        }\n        createWorkDoneProgress() {\n            if (this._progressSupported) {\n                const token = uuid_1.generateUuid();\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\n                    const result = new WorkDoneProgressServerReporterImpl(this.connection, token);\n                    return result;\n                });\n            }\n            else {\n                return Promise.resolve(new NullProgressServerReporter());\n            }\n        }\n    };\n};\nexports.ProgressFeature = ProgressFeature;\nvar ResultProgress;\n(function (ResultProgress) {\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\n})(ResultProgress || (ResultProgress = {}));\nclass ResultProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n    }\n    report(data) {\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\n    }\n}\nfunction attachPartialResult(connection, params) {\n    if (params === undefined || params.partialResultToken === undefined) {\n        return undefined;\n    }\n    const token = params.partialResultToken;\n    delete params.partialResultToken;\n    return new ResultProgressReporterImpl(connection, token);\n}\nexports.attachPartialResult = attachPartialResult;\n//# sourceMappingURL=progress.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
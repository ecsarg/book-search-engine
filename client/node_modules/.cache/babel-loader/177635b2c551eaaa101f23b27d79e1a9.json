{"ast":null,"code":"\"use strict\"; // tslint:disable no-implicit-dependencies\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"../config\");\n\nfunction addOclifExitCode(error, options) {\n  if (!('oclif' in error)) {\n    error.oclif = {};\n  }\n\n  error.oclif.exit = (options === null || options === void 0 ? void 0 : options.exit) === undefined ? 2 : options.exit;\n  return error;\n}\n\nexports.addOclifExitCode = addOclifExitCode;\n\nclass CLIError extends Error {\n  constructor(error, options = {}) {\n    super(error instanceof Error ? error.message : error);\n    this.oclif = {};\n    addOclifExitCode(this, options);\n    this.code = options.code;\n  }\n\n  get stack() {\n    const clean = require('clean-stack');\n\n    return clean(super.stack, {\n      pretty: true\n    });\n  }\n  /**\n   * @deprecated `render` Errors display should be handled by display function, like pretty-print\n   * @return {string} returns a string representing the dispay of the error\n   */\n\n\n  render() {\n    if (config_1.config.debug) {\n      return this.stack;\n    }\n\n    const wrap = require('wrap-ansi');\n\n    const indent = require('indent-string');\n\n    let output = `${this.name}: ${this.message}`; // eslint-disable-next-line node/no-missing-require\n\n    output = wrap(output, require('../screen').errtermwidth - 6, {\n      trim: false,\n      hard: true\n    });\n    output = indent(output, 3);\n    output = indent(output, 1, {\n      indent: this.bang,\n      includeEmptyLines: true\n    });\n    output = indent(output, 1);\n    return output;\n  }\n\n  get bang() {\n    let red = s => s;\n\n    try {\n      red = require('chalk').red;\n    } catch (_a) {}\n\n    return red(process.platform === 'win32' ? '»' : '›');\n  }\n\n}\n\nexports.CLIError = CLIError;\n\n(function (CLIError) {\n  class Warn extends CLIError {\n    constructor(err) {\n      super(err instanceof Error ? err.message : err);\n      this.name = 'Warning';\n    }\n\n    get bang() {\n      let yellow = s => s;\n\n      try {\n        yellow = require('chalk').yellow;\n      } catch (_a) {}\n\n      return yellow(process.platform === 'win32' ? '»' : '›');\n    }\n\n  }\n\n  CLIError.Warn = Warn;\n})(CLIError = exports.CLIError || (exports.CLIError = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","config_1","require","addOclifExitCode","error","options","oclif","exit","undefined","CLIError","Error","constructor","message","code","stack","clean","pretty","render","config","debug","wrap","indent","output","name","errtermwidth","trim","hard","bang","includeEmptyLines","red","s","_a","process","platform","Warn","err","yellow"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/@oclif/errors/lib/errors/cli.js"],"sourcesContent":["\"use strict\";\n// tslint:disable no-implicit-dependencies\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"../config\");\nfunction addOclifExitCode(error, options) {\n    if (!('oclif' in error)) {\n        error.oclif = {};\n    }\n    error.oclif.exit = (options === null || options === void 0 ? void 0 : options.exit) === undefined ? 2 : options.exit;\n    return error;\n}\nexports.addOclifExitCode = addOclifExitCode;\nclass CLIError extends Error {\n    constructor(error, options = {}) {\n        super(error instanceof Error ? error.message : error);\n        this.oclif = {};\n        addOclifExitCode(this, options);\n        this.code = options.code;\n    }\n    get stack() {\n        const clean = require('clean-stack');\n        return clean(super.stack, { pretty: true });\n    }\n    /**\n     * @deprecated `render` Errors display should be handled by display function, like pretty-print\n     * @return {string} returns a string representing the dispay of the error\n     */\n    render() {\n        if (config_1.config.debug) {\n            return this.stack;\n        }\n        const wrap = require('wrap-ansi');\n        const indent = require('indent-string');\n        let output = `${this.name}: ${this.message}`;\n        // eslint-disable-next-line node/no-missing-require\n        output = wrap(output, require('../screen').errtermwidth - 6, { trim: false, hard: true });\n        output = indent(output, 3);\n        output = indent(output, 1, { indent: this.bang, includeEmptyLines: true });\n        output = indent(output, 1);\n        return output;\n    }\n    get bang() {\n        let red = ((s) => s);\n        try {\n            red = require('chalk').red;\n        }\n        catch (_a) { }\n        return red(process.platform === 'win32' ? '»' : '›');\n    }\n}\nexports.CLIError = CLIError;\n(function (CLIError) {\n    class Warn extends CLIError {\n        constructor(err) {\n            super(err instanceof Error ? err.message : err);\n            this.name = 'Warning';\n        }\n        get bang() {\n            let yellow = ((s) => s);\n            try {\n                yellow = require('chalk').yellow;\n            }\n            catch (_a) { }\n            return yellow(process.platform === 'win32' ? '»' : '›');\n        }\n    }\n    CLIError.Warn = Warn;\n})(CLIError = exports.CLIError || (exports.CLIError = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
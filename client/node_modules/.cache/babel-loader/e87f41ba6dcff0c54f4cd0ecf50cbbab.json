{"ast":null,"code":"var common = require('./common');\n\nvar fs = require('fs');\n\ncommon.register('head', _head, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines'\n  }\n}); // Reads |numLines| lines or the entire file, whichever is less.\n\nfunction readSomeLines(file, numLines) {\n  var buf = common.buffer();\n  var bufLength = buf.length;\n  var bytesRead = bufLength;\n  var pos = 0;\n  var fdr = fs.openSync(file, 'r');\n  var numLinesRead = 0;\n  var ret = '';\n\n  while (bytesRead === bufLength && numLinesRead < numLines) {\n    bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n    var bufStr = buf.toString('utf8', 0, bytesRead);\n    numLinesRead += bufStr.split('\\n').length - 1;\n    ret += bufStr;\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  return ret;\n} //@\n//@ ### head([{'-n': \\<num\\>},] file [, file ...])\n//@ ### head([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the first `<num>` lines of the files\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = head({'-n': 1}, 'file*.txt');\n//@ var str = head('file1', 'file2');\n//@ var str = head(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the start of a file.\n\n\nfunction _head(options, files) {\n  var head = [];\n  var pipe = common.readFromPipe();\n  if (!files && !pipe) common.error('no paths given');\n  var idx = 1;\n\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, {\n          continue: true\n        });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true\n        });\n        return;\n      }\n    }\n\n    var contents;\n\n    if (file === '-') {\n      contents = pipe;\n    } else if (options.numLines < 0) {\n      contents = fs.readFileSync(file, 'utf8');\n    } else {\n      contents = readSomeLines(file, options.numLines);\n    }\n\n    var lines = contents.split('\\n');\n    var hasTrailingNewline = lines[lines.length - 1] === '';\n\n    if (hasTrailingNewline) {\n      lines.pop();\n    }\n\n    shouldAppendNewline = hasTrailingNewline || options.numLines < lines.length;\n    head = head.concat(lines.slice(0, options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    head.push(''); // to add a trailing newline once we join\n  }\n\n  return head.join('\\n');\n}\n\nmodule.exports = _head;","map":{"version":3,"names":["common","require","fs","register","_head","canReceivePipe","cmdOptions","readSomeLines","file","numLines","buf","buffer","bufLength","length","bytesRead","pos","fdr","openSync","numLinesRead","ret","readSync","bufStr","toString","split","closeSync","options","files","head","pipe","readFromPipe","error","idx","Number","arguments","slice","call","unshift","shouldAppendNewline","forEach","existsSync","continue","statFollowLinks","isDirectory","contents","readFileSync","lines","hasTrailingNewline","pop","concat","push","join","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/shelljs/src/head.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('head', _head, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n// Reads |numLines| lines or the entire file, whichever is less.\nfunction readSomeLines(file, numLines) {\n  var buf = common.buffer();\n  var bufLength = buf.length;\n  var bytesRead = bufLength;\n  var pos = 0;\n\n  var fdr = fs.openSync(file, 'r');\n  var numLinesRead = 0;\n  var ret = '';\n  while (bytesRead === bufLength && numLinesRead < numLines) {\n    bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n    var bufStr = buf.toString('utf8', 0, bytesRead);\n    numLinesRead += bufStr.split('\\n').length - 1;\n    ret += bufStr;\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  return ret;\n}\n\n//@\n//@ ### head([{'-n': \\<num\\>},] file [, file ...])\n//@ ### head([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the first `<num>` lines of the files\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = head({'-n': 1}, 'file*.txt');\n//@ var str = head('file1', 'file2');\n//@ var str = head(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the start of a file.\nfunction _head(options, files) {\n  var head = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents;\n    if (file === '-') {\n      contents = pipe;\n    } else if (options.numLines < 0) {\n      contents = fs.readFileSync(file, 'utf8');\n    } else {\n      contents = readSomeLines(file, options.numLines);\n    }\n\n    var lines = contents.split('\\n');\n    var hasTrailingNewline = (lines[lines.length - 1] === '');\n    if (hasTrailingNewline) {\n      lines.pop();\n    }\n    shouldAppendNewline = (hasTrailingNewline || options.numLines < lines.length);\n\n    head = head.concat(lines.slice(0, options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    head.push(''); // to add a trailing newline once we join\n  }\n  return head.join('\\n');\n}\nmodule.exports = _head;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
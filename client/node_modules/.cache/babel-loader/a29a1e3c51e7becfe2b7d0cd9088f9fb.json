{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSignals = void 0;\n\nvar _os = require(\"os\");\n\nvar _core = require(\"./core.js\");\n\nvar _realtime = require(\"./realtime.js\");\n\nconst getSignals = function () {\n  const realtimeSignals = (0, _realtime.getRealtimeSignals)();\n  const signals = [..._core.SIGNALS, ...realtimeSignals].map(normalizeSignal);\n  return signals;\n};\n\nexports.getSignals = getSignals;\n\nconst normalizeSignal = function ({\n  name,\n  number: defaultNumber,\n  description,\n  action,\n  forced = false,\n  standard\n}) {\n  const {\n    signals: {\n      [name]: constantSignal\n    }\n  } = _os.constants;\n  const supported = constantSignal !== undefined;\n  const number = supported ? constantSignal : defaultNumber;\n  return {\n    name,\n    number,\n    description,\n    supported,\n    action,\n    forced,\n    standard\n  };\n};","map":{"version":3,"sources":["../../src/signals.js"],"names":["getSignals","realtimeSignals","signals","SIGNALS","normalizeSignal","number","forced","constants","supported","constantSignal"],"mappings":";;;;;;;AAAA,IAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAIO,MAAMA,UAAU,GAAG,YAAW;EACnC,MAAMC,eAAe,GAAG,CAAA,GAAA,SAAA,CAAxB,kBAAwB,GAAxB;EACA,MAAMC,OAAO,GAAG,CAAC,GAAGC,KAAAA,CAAJ,OAAA,EAAa,GAAb,eAAA,EAAA,GAAA,CAAhB,eAAgB,CAAhB;EACA,OAAA,OAAA;AAHK,CAAA;;;;AAYP,MAAMC,eAAe,GAAG,UAAS;EAAA,IAAA;EAE/BC,MAAM,EAFyB,aAAA;EAAA,WAAA;EAAA,MAAA;EAK/BC,MAAM,GALyB,KAAA;EAAT;AAAS,CAAT,EAOrB;EACD,MAAM;IACJJ,OAAO,EAAE;MAAE,CAAA,IAAA,GADP;IACK;EADL,IAEFK,GAAAA,CAFJ,SAAA;EAGA,MAAMC,SAAS,GAAGC,cAAc,KAAhC,SAAA;EACA,MAAMJ,MAAM,GAAGG,SAAS,GAAA,cAAA,GAAxB,aAAA;EACA,OAAO;IAAA,IAAA;IAAA,MAAA;IAAA,WAAA;IAAA,SAAA;IAAA,MAAA;IAAA,MAAA;IAAP;EAAO,CAAP;AAbF,CAAA","sourcesContent":["import { constants } from 'os'\n\nimport { SIGNALS } from './core.js'\nimport { getRealtimeSignals } from './realtime.js'\n\n// Retrieve list of know signals (including realtime) with information about\n// them\nexport const getSignals = function() {\n  const realtimeSignals = getRealtimeSignals()\n  const signals = [...SIGNALS, ...realtimeSignals].map(normalizeSignal)\n  return signals\n}\n\n// Normalize signal:\n//  - `number`: signal numbers are OS-specific. This is taken into account by\n//    `os.constants.signals`. However we provide a default `number` since some\n//     signals are not defined for some OS.\n//  - `forced`: set default to `false`\n//  - `supported`: set value\nconst normalizeSignal = function({\n  name,\n  number: defaultNumber,\n  description,\n  action,\n  forced = false,\n  standard,\n}) {\n  const {\n    signals: { [name]: constantSignal },\n  } = constants\n  const supported = constantSignal !== undefined\n  const number = supported ? constantSignal : defaultNumber\n  return { name, number, description, supported, action, forced, standard }\n}\n"]},"metadata":{},"sourceType":"script"}
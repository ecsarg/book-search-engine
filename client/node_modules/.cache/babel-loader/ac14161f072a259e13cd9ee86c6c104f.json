{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _url = require(\"url\");\n\nvar _errors = require(\"../errors\");\n\nconst parseProxyUrl = url => {\n  const urlTokens = (0, _url.parse)(url);\n\n  if (urlTokens.query !== null) {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have query.');\n  }\n\n  if (urlTokens.hash !== null) {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have hash.');\n  }\n\n  if (urlTokens.protocol !== 'http:') {\n    throw new _errors.UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL protocol must be \"http:\".');\n  }\n\n  let port = 80;\n\n  if (urlTokens.port) {\n    port = Number.parseInt(urlTokens.port, 10);\n  }\n\n  return {\n    authorization: urlTokens.auth || null,\n    hostname: urlTokens.hostname,\n    port\n  };\n};\n\nvar _default = parseProxyUrl;\nexports.default = _default;","map":{"version":3,"sources":["../../src/utilities/parseProxyUrl.js"],"names":["url","urlTokens","UnexpectedStateError","port","Number","authorization","hostname"],"mappings":";;;;;;;AAEA,IAAA,IAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;sBAIgBA,G,IAAgB;EAC9B,MAAMC,SAAS,GAAG,CAAA,GAAA,IAAA,CAAA,KAAA,EAAlB,GAAkB,CAAlB;;EAEA,IAAIA,SAAS,CAATA,KAAAA,KAAJ,IAAA,EAA8B;IAC5B,MAAM,IAAIC,OAAAA,CAAJ,oBAAA,CAAN,qFAAM,CAAN;EACD;;EAED,IAAID,SAAS,CAATA,IAAAA,KAAJ,IAAA,EAA6B;IAC3B,MAAM,IAAIC,OAAAA,CAAJ,oBAAA,CAAN,oFAAM,CAAN;EACD;;EAED,IAAID,SAAS,CAATA,QAAAA,KAAJ,OAAA,EAAoC;IAClC,MAAM,IAAIC,OAAAA,CAAJ,oBAAA,CAAN,0FAAM,CAAN;EACD;;EAED,IAAIC,IAAI,GAAR,EAAA;;EAEA,IAAIF,SAAS,CAAb,IAAA,EAAoB;IAClBE,IAAI,GAAGC,MAAM,CAANA,QAAAA,CAAgBH,SAAS,CAAzBG,IAAAA,EAAPD,EAAOC,CAAPD;EACD;;EAED,OAAO;IACLE,aAAa,EAAEJ,SAAS,CAATA,IAAAA,IADV,IAAA;IAELK,QAAQ,EAAEL,SAAS,CAFd,QAAA;IAGLE;EAHK,CAAP","sourcesContent":["// @flow\n\nimport {\n  parse as parseUrl,\n} from 'url';\nimport {\n  UnexpectedStateError,\n} from '../errors';\n\nexport default (url: string) => {\n  const urlTokens = parseUrl(url);\n\n  if (urlTokens.query !== null) {\n    throw new UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have query.');\n  }\n\n  if (urlTokens.hash !== null) {\n    throw new UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL must not have hash.');\n  }\n\n  if (urlTokens.protocol !== 'http:') {\n    throw new UnexpectedStateError('Unsupported `GLOBAL_AGENT.HTTP_PROXY` configuration value: URL protocol must be \"http:\".');\n  }\n\n  let port = 80;\n\n  if (urlTokens.port) {\n    port = Number.parseInt(urlTokens.port, 10);\n  }\n\n  return {\n    authorization: urlTokens.auth || null,\n    hostname: urlTokens.hostname,\n    port,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}
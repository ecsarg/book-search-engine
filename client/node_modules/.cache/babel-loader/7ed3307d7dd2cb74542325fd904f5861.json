{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst pjson = require('../package.json');\n\nconst Config = require(\"@oclif/config\");\n\nconst Errors = require(\"@oclif/errors\");\n\nconst help_1 = require(\"@oclif/help\");\n\nconst util_1 = require(\"util\");\n\nconst util_2 = require(\"./util\");\n/**\n * swallows stdout epipe errors\n * this occurs when stdout closes such as when piping to head\n */\n\n\nprocess.stdout.on('error', err => {\n  if (err && err.code === 'EPIPE') return;\n  throw err;\n});\n/**\n * An abstract class which acts as the base for each command\n * in your project.\n */\n\nclass Command {\n  constructor(argv, config) {\n    this.argv = argv;\n    this.config = config;\n    this.id = this.ctor.id;\n\n    try {\n      this.debug = require('debug')(this.id ? `${this.config.bin}:${this.id}` : this.config.bin);\n    } catch (_a) {\n      this.debug = () => {};\n    }\n  }\n\n  get ctor() {\n    return this.constructor;\n  }\n\n  async _run() {\n    let err;\n\n    try {\n      // remove redirected env var to allow subsessions to run autoupdated client\n      delete process.env[this.config.scopedEnvVarKey('REDIRECTED')];\n      await this.init();\n      return await this.run();\n    } catch (error) {\n      err = error;\n      await this.catch(error);\n    } finally {\n      await this.finally(err);\n    }\n  }\n\n  exit(code = 0) {\n    return Errors.exit(code);\n  }\n\n  warn(input) {\n    Errors.warn(input);\n  }\n\n  error(input, options = {}) {\n    return Errors.error(input, options);\n  }\n\n  log(message = '', ...args) {\n    // tslint:disable-next-line strict-type-predicates\n    message = typeof message === 'string' ? message : util_1.inspect(message);\n    process.stdout.write(util_1.format(message, ...args) + '\\n');\n  }\n\n  async init() {\n    this.debug('init version: %s argv: %o', this.ctor._base, this.argv);\n    if (this.config.debug) Errors.config.debug = true;\n    if (this.config.errlog) Errors.config.errlog = this.config.errlog; // global['cli-ux'].context = global['cli-ux'].context || {\n    //   command: compact([this.id, ...this.argv]).join(' '),\n    //   version: this.config.userAgent,\n    // }\n\n    const g = global;\n    g['http-call'] = g['http-call'] || {};\n    g['http-call'].userAgent = this.config.userAgent;\n    if (this._helpOverride()) return this._help();\n  }\n\n  parse(options, argv = this.argv) {\n    if (!options) options = this.constructor;\n    return require('@oclif/parser').parse(argv, Object.assign({\n      context: this\n    }, options));\n  }\n\n  async catch(err) {\n    if (!err.message) throw err;\n\n    if (err.message.match(/Unexpected arguments?: (-h|--help|help)(,|\\n)/)) {\n      return this._help();\n    }\n\n    if (err.message.match(/Unexpected arguments?: (-v|--version|version)(,|\\n)/)) {\n      return this._version();\n    }\n\n    try {\n      const {\n        cli\n      } = require('cli-ux');\n\n      const chalk = require('chalk'); // eslint-disable-line node/no-extraneous-require\n\n\n      cli.action.stop(chalk.bold.red('!'));\n    } catch (_a) {}\n\n    throw err;\n  }\n\n  async finally(_) {\n    try {\n      const config = require('@oclif/errors').config;\n\n      if (config.errorLogger) await config.errorLogger.flush(); // tslint:disable-next-line no-console\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  _help() {\n    const HelpClass = help_1.getHelpClass(this.config);\n    const help = new HelpClass(this.config);\n    const cmd = Config.Command.toCached(this.ctor);\n    if (!cmd.id) cmd.id = '';\n    let topics = this.config.topics;\n    topics = topics.filter(t => !t.hidden);\n    topics = util_2.sortBy(topics, t => t.name);\n    topics = util_2.uniqBy(topics, t => t.name);\n    help.showCommandHelp(cmd, topics);\n    return this.exit(0);\n  }\n\n  _helpOverride() {\n    for (const arg of this.argv) {\n      if (arg === '--help') return true;\n      if (arg === '--') return false;\n    }\n\n    return false;\n  }\n\n  _version() {\n    this.log(this.config.userAgent);\n    return this.exit(0);\n  }\n\n}\n\nexports.default = Command;\nCommand._base = `${pjson.name}@${pjson.version}`;\n/** An array of aliases for this command */\n\nCommand.aliases = [];\n/** When set to false, allows a variable amount of arguments */\n\nCommand.strict = true;\nCommand.parse = true;\nCommand.parserOptions = {};\n/**\n * instantiate and run the command\n * @param {Config.Command.Class} this Class\n * @param {string[]} argv argv\n * @param {Config.LoadOptions} opts options\n * @returns Promise<any>\n */\n\nCommand.run = async function (argv, opts) {\n  if (!argv) argv = process.argv.slice(2);\n  const config = await Config.load(opts || module.parent && module.parent.parent && module.parent.parent.filename || __dirname);\n  const cmd = new this(argv, config);\n  return cmd._run(argv);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","pjson","require","Config","Errors","help_1","util_1","util_2","process","stdout","on","err","code","Command","constructor","argv","config","id","ctor","debug","bin","_a","_run","env","scopedEnvVarKey","init","run","error","catch","finally","exit","warn","input","options","log","message","args","inspect","write","format","_base","errlog","g","global","userAgent","_helpOverride","_help","parse","assign","context","match","_version","cli","chalk","action","stop","bold","red","_","errorLogger","flush","console","HelpClass","getHelpClass","help","cmd","toCached","topics","filter","t","hidden","sortBy","name","uniqBy","showCommandHelp","arg","default","version","aliases","strict","parserOptions","opts","slice","load","module","parent","filename","__dirname"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/@oclif/command/lib/command.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pjson = require('../package.json');\nconst Config = require(\"@oclif/config\");\nconst Errors = require(\"@oclif/errors\");\nconst help_1 = require(\"@oclif/help\");\nconst util_1 = require(\"util\");\nconst util_2 = require(\"./util\");\n/**\n * swallows stdout epipe errors\n * this occurs when stdout closes such as when piping to head\n */\nprocess.stdout.on('error', err => {\n    if (err && err.code === 'EPIPE')\n        return;\n    throw err;\n});\n/**\n * An abstract class which acts as the base for each command\n * in your project.\n */\nclass Command {\n    constructor(argv, config) {\n        this.argv = argv;\n        this.config = config;\n        this.id = this.ctor.id;\n        try {\n            this.debug = require('debug')(this.id ? `${this.config.bin}:${this.id}` : this.config.bin);\n        }\n        catch (_a) {\n            this.debug = () => { };\n        }\n    }\n    get ctor() {\n        return this.constructor;\n    }\n    async _run() {\n        let err;\n        try {\n            // remove redirected env var to allow subsessions to run autoupdated client\n            delete process.env[this.config.scopedEnvVarKey('REDIRECTED')];\n            await this.init();\n            return await this.run();\n        }\n        catch (error) {\n            err = error;\n            await this.catch(error);\n        }\n        finally {\n            await this.finally(err);\n        }\n    }\n    exit(code = 0) {\n        return Errors.exit(code);\n    }\n    warn(input) {\n        Errors.warn(input);\n    }\n    error(input, options = {}) {\n        return Errors.error(input, options);\n    }\n    log(message = '', ...args) {\n        // tslint:disable-next-line strict-type-predicates\n        message = typeof message === 'string' ? message : util_1.inspect(message);\n        process.stdout.write(util_1.format(message, ...args) + '\\n');\n    }\n    async init() {\n        this.debug('init version: %s argv: %o', this.ctor._base, this.argv);\n        if (this.config.debug)\n            Errors.config.debug = true;\n        if (this.config.errlog)\n            Errors.config.errlog = this.config.errlog;\n        // global['cli-ux'].context = global['cli-ux'].context || {\n        //   command: compact([this.id, ...this.argv]).join(' '),\n        //   version: this.config.userAgent,\n        // }\n        const g = global;\n        g['http-call'] = g['http-call'] || {};\n        g['http-call'].userAgent = this.config.userAgent;\n        if (this._helpOverride())\n            return this._help();\n    }\n    parse(options, argv = this.argv) {\n        if (!options)\n            options = this.constructor;\n        return require('@oclif/parser').parse(argv, Object.assign({ context: this }, options));\n    }\n    async catch(err) {\n        if (!err.message)\n            throw err;\n        if (err.message.match(/Unexpected arguments?: (-h|--help|help)(,|\\n)/)) {\n            return this._help();\n        }\n        if (err.message.match(/Unexpected arguments?: (-v|--version|version)(,|\\n)/)) {\n            return this._version();\n        }\n        try {\n            const { cli } = require('cli-ux');\n            const chalk = require('chalk'); // eslint-disable-line node/no-extraneous-require\n            cli.action.stop(chalk.bold.red('!'));\n        }\n        catch (_a) { }\n        throw err;\n    }\n    async finally(_) {\n        try {\n            const config = require('@oclif/errors').config;\n            if (config.errorLogger)\n                await config.errorLogger.flush();\n            // tslint:disable-next-line no-console\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    _help() {\n        const HelpClass = help_1.getHelpClass(this.config);\n        const help = new HelpClass(this.config);\n        const cmd = Config.Command.toCached(this.ctor);\n        if (!cmd.id)\n            cmd.id = '';\n        let topics = this.config.topics;\n        topics = topics.filter((t) => !t.hidden);\n        topics = util_2.sortBy(topics, (t) => t.name);\n        topics = util_2.uniqBy(topics, (t) => t.name);\n        help.showCommandHelp(cmd, topics);\n        return this.exit(0);\n    }\n    _helpOverride() {\n        for (const arg of this.argv) {\n            if (arg === '--help')\n                return true;\n            if (arg === '--')\n                return false;\n        }\n        return false;\n    }\n    _version() {\n        this.log(this.config.userAgent);\n        return this.exit(0);\n    }\n}\nexports.default = Command;\nCommand._base = `${pjson.name}@${pjson.version}`;\n/** An array of aliases for this command */\nCommand.aliases = [];\n/** When set to false, allows a variable amount of arguments */\nCommand.strict = true;\nCommand.parse = true;\nCommand.parserOptions = {};\n/**\n * instantiate and run the command\n * @param {Config.Command.Class} this Class\n * @param {string[]} argv argv\n * @param {Config.LoadOptions} opts options\n * @returns Promise<any>\n */\nCommand.run = async function (argv, opts) {\n    if (!argv)\n        argv = process.argv.slice(2);\n    const config = await Config.load(opts || (module.parent && module.parent.parent && module.parent.parent.filename) || __dirname);\n    const cmd = new this(argv, config);\n    return cmd._run(argv);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
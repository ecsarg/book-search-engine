{"ast":null,"code":"'use strict';\n\nclass NonError extends Error {\n  constructor(message) {\n    super(NonError._prepareSuperMessage(message));\n    Object.defineProperty(this, 'name', {\n      value: 'NonError',\n      configurable: true,\n      writable: true\n    });\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, NonError);\n    }\n  }\n\n  static _prepareSuperMessage(message) {\n    try {\n      return JSON.stringify(message);\n    } catch (_) {\n      return String(message);\n    }\n  }\n\n}\n\nconst commonProperties = [{\n  property: 'name',\n  enumerable: false\n}, {\n  property: 'message',\n  enumerable: false\n}, {\n  property: 'stack',\n  enumerable: false\n}, {\n  property: 'code',\n  enumerable: true\n}];\n\nconst destroyCircular = ({\n  from,\n  seen,\n  to_,\n  forceEnumerable\n}) => {\n  const to = to_ || (Array.isArray(from) ? [] : {});\n  seen.push(from);\n\n  for (const [key, value] of Object.entries(from)) {\n    if (typeof value === 'function') {\n      continue;\n    }\n\n    if (!value || typeof value !== 'object') {\n      to[key] = value;\n      continue;\n    }\n\n    if (!seen.includes(from[key])) {\n      to[key] = destroyCircular({\n        from: from[key],\n        seen: seen.slice(),\n        forceEnumerable\n      });\n      continue;\n    }\n\n    to[key] = '[Circular]';\n  }\n\n  for (const {\n    property,\n    enumerable\n  } of commonProperties) {\n    if (typeof from[property] === 'string') {\n      Object.defineProperty(to, property, {\n        value: from[property],\n        enumerable: forceEnumerable ? true : enumerable,\n        configurable: true,\n        writable: true\n      });\n    }\n  }\n\n  return to;\n};\n\nconst serializeError = value => {\n  if (typeof value === 'object' && value !== null) {\n    return destroyCircular({\n      from: value,\n      seen: [],\n      forceEnumerable: true\n    });\n  } // People sometimes throw things besides Error objects…\n\n\n  if (typeof value === 'function') {\n    // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n    return `[Function: ${value.name || 'anonymous'}]`;\n  }\n\n  return value;\n};\n\nconst deserializeError = value => {\n  if (value instanceof Error) {\n    return value;\n  }\n\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const newError = new Error();\n    destroyCircular({\n      from: value,\n      seen: [],\n      to_: newError\n    });\n    return newError;\n  }\n\n  return new NonError(value);\n};\n\nmodule.exports = {\n  serializeError,\n  deserializeError\n};","map":{"version":3,"names":["NonError","Error","constructor","message","_prepareSuperMessage","Object","defineProperty","value","configurable","writable","captureStackTrace","JSON","stringify","_","String","commonProperties","property","enumerable","destroyCircular","from","seen","to_","forceEnumerable","to","Array","isArray","push","key","entries","includes","slice","serializeError","name","deserializeError","newError","module","exports"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/serialize-error/index.js"],"sourcesContent":["'use strict';\n\nclass NonError extends Error {\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tvalue: 'NonError',\n\t\t\tconfigurable: true,\n\t\t\twritable: true\n\t\t});\n\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, NonError);\n\t\t}\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch (_) {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst commonProperties = [\n\t{property: 'name', enumerable: false},\n\t{property: 'message', enumerable: false},\n\t{property: 'stack', enumerable: false},\n\t{property: 'code', enumerable: true}\n];\n\nconst destroyCircular = ({from, seen, to_, forceEnumerable}) => {\n\tconst to = to_ || (Array.isArray(from) ? [] : {});\n\n\tseen.push(from);\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\tto[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tto[key] = destroyCircular({from: from[key], seen: seen.slice(), forceEnumerable});\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const {property, enumerable} of commonProperties) {\n\t\tif (typeof from[property] === 'string') {\n\t\t\tObject.defineProperty(to, property, {\n\t\t\t\tvalue: from[property],\n\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t}\n\n\treturn to;\n};\n\nconst serializeError = value => {\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({from: value, seen: [], forceEnumerable: true});\n\t}\n\n\t// People sometimes throw things besides Error objects…\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\treturn `[Function: ${(value.name || 'anonymous')}]`;\n\t}\n\n\treturn value;\n};\n\nconst deserializeError = value => {\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n\t\tconst newError = new Error();\n\t\tdestroyCircular({from: value, seen: [], to_: newError});\n\t\treturn newError;\n\t}\n\n\treturn new NonError(value);\n};\n\nmodule.exports = {\n\tserializeError,\n\tdeserializeError\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
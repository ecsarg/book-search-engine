{"ast":null,"code":"\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SemanticTokensBuilder = exports.SemanticTokensFeature = void 0;\n\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\n\nconst SemanticTokensFeature = Base => {\n  return class extends Base {\n    get semanticTokens() {\n      return {\n        on: handler => {\n          const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;\n          this.connection.onRequest(type, (params, cancel) => {\n            return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n          });\n        },\n        onDelta: handler => {\n          const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;\n          this.connection.onRequest(type, (params, cancel) => {\n            return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n          });\n        },\n        onRange: handler => {\n          const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;\n          this.connection.onRequest(type, (params, cancel) => {\n            return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n          });\n        }\n      };\n    }\n\n  };\n};\n\nexports.SemanticTokensFeature = SemanticTokensFeature;\n\nclass SemanticTokensBuilder {\n  constructor() {\n    this._prevData = undefined;\n    this.initialize();\n  }\n\n  initialize() {\n    this._id = Date.now();\n    this._prevLine = 0;\n    this._prevChar = 0;\n    this._data = [];\n    this._dataLen = 0;\n  }\n\n  push(line, char, length, tokenType, tokenModifiers) {\n    let pushLine = line;\n    let pushChar = char;\n\n    if (this._dataLen > 0) {\n      pushLine -= this._prevLine;\n\n      if (pushLine === 0) {\n        pushChar -= this._prevChar;\n      }\n    }\n\n    this._data[this._dataLen++] = pushLine;\n    this._data[this._dataLen++] = pushChar;\n    this._data[this._dataLen++] = length;\n    this._data[this._dataLen++] = tokenType;\n    this._data[this._dataLen++] = tokenModifiers;\n    this._prevLine = line;\n    this._prevChar = char;\n  }\n\n  get id() {\n    return this._id.toString();\n  }\n\n  previousResult(id) {\n    if (this.id === id) {\n      this._prevData = this._data;\n    }\n\n    this.initialize();\n  }\n\n  build() {\n    this._prevData = undefined;\n    return {\n      resultId: this.id,\n      data: this._data\n    };\n  }\n\n  canBuildEdits() {\n    return this._prevData !== undefined;\n  }\n\n  buildEdits() {\n    if (this._prevData !== undefined) {\n      const prevDataLength = this._prevData.length;\n      const dataLength = this._data.length;\n      let startIndex = 0;\n\n      while (startIndex < dataLength && startIndex < prevDataLength && this._prevData[startIndex] === this._data[startIndex]) {\n        startIndex++;\n      }\n\n      if (startIndex < dataLength && startIndex < prevDataLength) {\n        // Find end index\n        let endIndex = 0;\n\n        while (endIndex < dataLength && endIndex < prevDataLength && this._prevData[prevDataLength - 1 - endIndex] === this._data[dataLength - 1 - endIndex]) {\n          endIndex++;\n        }\n\n        const newData = this._data.slice(startIndex, dataLength - endIndex);\n\n        const result = {\n          resultId: this.id,\n          edits: [{\n            start: startIndex,\n            deleteCount: prevDataLength - endIndex - startIndex,\n            data: newData\n          }]\n        };\n        return result;\n      } else if (startIndex < dataLength) {\n        return {\n          resultId: this.id,\n          edits: [{\n            start: startIndex,\n            deleteCount: 0,\n            data: this._data.slice(startIndex)\n          }]\n        };\n      } else if (startIndex < prevDataLength) {\n        return {\n          resultId: this.id,\n          edits: [{\n            start: startIndex,\n            deleteCount: prevDataLength - startIndex\n          }]\n        };\n      } else {\n        return {\n          resultId: this.id,\n          edits: []\n        };\n      }\n    } else {\n      return this.build();\n    }\n  }\n\n}\n\nexports.SemanticTokensBuilder = SemanticTokensBuilder;","map":{"version":3,"names":["Object","defineProperty","exports","value","SemanticTokensBuilder","SemanticTokensFeature","vscode_languageserver_protocol_1","require","Base","semanticTokens","on","handler","type","SemanticTokensRequest","connection","onRequest","params","cancel","attachWorkDoneProgress","attachPartialResultProgress","onDelta","SemanticTokensDeltaRequest","onRange","SemanticTokensRangeRequest","constructor","_prevData","undefined","initialize","_id","Date","now","_prevLine","_prevChar","_data","_dataLen","push","line","char","length","tokenType","tokenModifiers","pushLine","pushChar","id","toString","previousResult","build","resultId","data","canBuildEdits","buildEdits","prevDataLength","dataLength","startIndex","endIndex","newData","slice","result","edits","start","deleteCount"],"sources":["/Users/Ellie/Desktop/projects/book-search-engine/client/node_modules/vscode-languageserver/lib/common/semanticTokens.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensBuilder = exports.SemanticTokensFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst SemanticTokensFeature = (Base) => {\n    return class extends Base {\n        get semanticTokens() {\n            return {\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onDelta: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onRange: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.SemanticTokensFeature = SemanticTokensFeature;\nclass SemanticTokensBuilder {\n    constructor() {\n        this._prevData = undefined;\n        this.initialize();\n    }\n    initialize() {\n        this._id = Date.now();\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._data = [];\n        this._dataLen = 0;\n    }\n    push(line, char, length, tokenType, tokenModifiers) {\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n    get id() {\n        return this._id.toString();\n    }\n    previousResult(id) {\n        if (this.id === id) {\n            this._prevData = this._data;\n        }\n        this.initialize();\n    }\n    build() {\n        this._prevData = undefined;\n        return {\n            resultId: this.id,\n            data: this._data\n        };\n    }\n    canBuildEdits() {\n        return this._prevData !== undefined;\n    }\n    buildEdits() {\n        if (this._prevData !== undefined) {\n            const prevDataLength = this._prevData.length;\n            const dataLength = this._data.length;\n            let startIndex = 0;\n            while (startIndex < dataLength && startIndex < prevDataLength && this._prevData[startIndex] === this._data[startIndex]) {\n                startIndex++;\n            }\n            if (startIndex < dataLength && startIndex < prevDataLength) {\n                // Find end index\n                let endIndex = 0;\n                while (endIndex < dataLength && endIndex < prevDataLength && this._prevData[prevDataLength - 1 - endIndex] === this._data[dataLength - 1 - endIndex]) {\n                    endIndex++;\n                }\n                const newData = this._data.slice(startIndex, dataLength - endIndex);\n                const result = {\n                    resultId: this.id,\n                    edits: [\n                        { start: startIndex, deleteCount: prevDataLength - endIndex - startIndex, data: newData }\n                    ]\n                };\n                return result;\n            }\n            else if (startIndex < dataLength) {\n                return { resultId: this.id, edits: [\n                        { start: startIndex, deleteCount: 0, data: this._data.slice(startIndex) }\n                    ] };\n            }\n            else if (startIndex < prevDataLength) {\n                return { resultId: this.id, edits: [\n                        { start: startIndex, deleteCount: prevDataLength - startIndex }\n                    ] };\n            }\n            else {\n                return { resultId: this.id, edits: [] };\n            }\n        }\n        else {\n            return this.build();\n        }\n    }\n}\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\n//# sourceMappingURL=semanticTokens.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reservedFieldUsed = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst reservedFieldUsed = ({\n  name: serviceName,\n  typeDefs\n}) => {\n  const errors = [];\n  let rootQueryName = 'Query';\n  graphql_1.visit(typeDefs, {\n    OperationTypeDefinition(node) {\n      if (node.operation === 'query') {\n        rootQueryName = node.type.name.value;\n      }\n    }\n\n  });\n  graphql_1.visit(typeDefs, {\n    ObjectTypeDefinition(node) {\n      if (node.name.value === rootQueryName && node.fields) {\n        for (const field of node.fields) {\n          const {\n            value: fieldName\n          } = field.name;\n\n          if (utils_1.reservedRootFields.includes(fieldName)) {\n            errors.push(utils_1.errorWithCode('RESERVED_FIELD_USED', utils_1.logServiceAndType(serviceName, rootQueryName, fieldName) + `${fieldName} is a field reserved for federation and can\\'t be used at the Query root.`, field));\n          }\n        }\n      }\n    }\n\n  });\n  return errors;\n};\n\nexports.reservedFieldUsed = reservedFieldUsed;","map":{"version":3,"sources":["../../../../src/composition/validate/preComposition/reservedFieldUsed.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AASO,MAAM,iBAAiB,GAAG,CAAC;EAChC,IAAI,EAAE,WAD0B;EAEhC;AAFgC,CAAD,KAGT;EACtB,MAAM,MAAM,GAAmB,EAA/B;EAEA,IAAI,aAAa,GAAG,OAApB;EACA,SAAA,CAAA,KAAA,CAAM,QAAN,EAAgB;IAEd,uBAAuB,CAAC,IAAD,EAAK;MAC1B,IAAI,IAAI,CAAC,SAAL,KAAmB,OAAvB,EAAgC;QAC9B,aAAa,GAAG,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,KAA/B;MACD;IACF;;EANa,CAAhB;EASA,SAAA,CAAA,KAAA,CAAM,QAAN,EAAgB;IACd,oBAAoB,CAAC,IAAD,EAAK;MACvB,IAAI,IAAI,CAAC,IAAL,CAAU,KAAV,KAAoB,aAApB,IAAqC,IAAI,CAAC,MAA9C,EAAsD;QACpD,KAAK,MAAM,KAAX,IAAoB,IAAI,CAAC,MAAzB,EAAiC;UAC/B,MAAM;YAAE,KAAK,EAAE;UAAT,IAAuB,KAAK,CAAC,IAAnC;;UACA,IAAI,OAAA,CAAA,kBAAA,CAAmB,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C;YAC1C,MAAM,CAAC,IAAP,CACE,OAAA,CAAA,aAAA,CACE,qBADF,EAEE,OAAA,CAAA,iBAAA,CAAkB,WAAlB,EAA+B,aAA/B,EAA8C,SAA9C,IACE,GAAG,SAAS,2EAHhB,EAIE,KAJF,CADF;UAQD;QACF;MACF;IACF;;EAjBa,CAAhB;EAoBA,OAAO,MAAP;AACD,CArCM;;AAAM,OAAA,CAAA,iBAAA,GAAiB,iBAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reservedFieldUsed = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"../../utils\");\nconst reservedFieldUsed = ({ name: serviceName, typeDefs, }) => {\n    const errors = [];\n    let rootQueryName = 'Query';\n    graphql_1.visit(typeDefs, {\n        OperationTypeDefinition(node) {\n            if (node.operation === 'query') {\n                rootQueryName = node.type.name.value;\n            }\n        },\n    });\n    graphql_1.visit(typeDefs, {\n        ObjectTypeDefinition(node) {\n            if (node.name.value === rootQueryName && node.fields) {\n                for (const field of node.fields) {\n                    const { value: fieldName } = field.name;\n                    if (utils_1.reservedRootFields.includes(fieldName)) {\n                        errors.push(utils_1.errorWithCode('RESERVED_FIELD_USED', utils_1.logServiceAndType(serviceName, rootQueryName, fieldName) +\n                            `${fieldName} is a field reserved for federation and can\\'t be used at the Query root.`, field));\n                    }\n                }\n            }\n        },\n    });\n    return errors;\n};\nexports.reservedFieldUsed = reservedFieldUsed;\n//# sourceMappingURL=reservedFieldUsed.js.map"]},"metadata":{},"sourceType":"script"}
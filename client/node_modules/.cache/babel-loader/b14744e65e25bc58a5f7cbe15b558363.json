{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatMS = void 0;\nconst ONE_SECOND_AS_MS = 1000;\nconst ONE_MINUTE_AS_MS = 60 * ONE_SECOND_AS_MS;\nconst ONE_HOUR_AS_MS = 60 * ONE_MINUTE_AS_MS;\n\nfunction formatMS(ms, d, allowMicros = false, allowNanos = true) {\n  if (ms === 0 || ms === null) return \"0\";\n  const bounds = [ONE_HOUR_AS_MS, ONE_MINUTE_AS_MS, ONE_SECOND_AS_MS, 1, 0.001, 0.000001];\n  const units = [\"hr\", \"min\", \"s\", \"ms\", \"μs\", \"ns\"];\n\n  const makeSmallNumbersNice = f => {\n    if (f >= 100) return f.toFixed(0);\n    if (f >= 10) return f.toFixed(1);\n    if (f === 0) return \"0\";\n    return f.toFixed(2);\n  };\n\n  const bound = bounds.find(b => b <= ms) || bounds[bounds.length - 1];\n  const boundIndex = bounds.indexOf(bound);\n  const unit = boundIndex >= 0 ? units[boundIndex] : \"\";\n\n  if ((unit === \"μs\" || unit === \"ns\") && !allowMicros) {\n    return \"< 1ms\";\n  }\n\n  if (unit === \"ns\" && !allowNanos) {\n    return \"< 1µs\";\n  }\n\n  const value = typeof d !== \"undefined\" ? (ms / bound).toFixed(d) : makeSmallNumbersNice(ms / bound);\n\n  if ((value === \"1000\" || value === \"1000.0\") && boundIndex >= 1) {\n    return `1${units[boundIndex - 1]}`;\n  }\n\n  return `${value}${unit}`;\n}\n\nexports.formatMS = formatMS;","map":{"version":3,"sources":["../src/format.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,gBAAgB,GAAG,IAAzB;AACA,MAAM,gBAAgB,GAAG,KAAK,gBAA9B;AACA,MAAM,cAAc,GAAG,KAAK,gBAA5B;;AAEA,SAAgB,QAAhB,CACE,EADF,EAEE,CAFF,EAGE,WAAW,GAAG,KAHhB,EAIE,UAAU,GAAG,IAJf,EAImB;EAEjB,IAAI,EAAE,KAAK,CAAP,IAAY,EAAE,KAAK,IAAvB,EAA6B,OAAO,GAAP;EAC7B,MAAM,MAAM,GAAG,CACb,cADa,EAEb,gBAFa,EAGb,gBAHa,EAIb,CAJa,EAKb,KALa,EAMb,QANa,CAAf;EAQA,MAAM,KAAK,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAd;;EAEA,MAAM,oBAAoB,GAAI,CAAD,IAAc;IACzC,IAAI,CAAC,IAAI,GAAT,EAAc,OAAO,CAAC,CAAC,OAAF,CAAU,CAAV,CAAP;IACd,IAAI,CAAC,IAAI,EAAT,EAAa,OAAO,CAAC,CAAC,OAAF,CAAU,CAAV,CAAP;IACb,IAAI,CAAC,KAAK,CAAV,EAAa,OAAO,GAAP;IACb,OAAO,CAAC,CAAC,OAAF,CAAU,CAAV,CAAP;EACD,CALD;;EAOA,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAa,CAAD,IAAO,CAAC,IAAI,EAAxB,KAA+B,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAnD;EACA,MAAM,UAAU,GAAG,MAAM,CAAC,OAAP,CAAe,KAAf,CAAnB;EACA,MAAM,IAAI,GAAG,UAAU,IAAI,CAAd,GAAkB,KAAK,CAAC,UAAD,CAAvB,GAAsC,EAAnD;;EAEA,IAAI,CAAC,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,IAA3B,KAAoC,CAAC,WAAzC,EAAsD;IACpD,OAAO,OAAP;EACD;;EACD,IAAI,IAAI,KAAK,IAAT,IAAiB,CAAC,UAAtB,EAAkC;IAChC,OAAO,OAAP;EACD;;EACD,MAAM,KAAK,GACT,OAAO,CAAP,KAAa,WAAb,GACI,CAAC,EAAE,GAAG,KAAN,EAAa,OAAb,CAAqB,CAArB,CADJ,GAEI,oBAAoB,CAAC,EAAE,GAAG,KAAN,CAH1B;;EAMA,IAAI,CAAC,KAAK,KAAK,MAAV,IAAoB,KAAK,KAAK,QAA/B,KAA4C,UAAU,IAAI,CAA9D,EAAiE;IAC/D,OAAO,IAAI,KAAK,CAAC,UAAU,GAAG,CAAd,CAAgB,EAAhC;EACD;;EAED,OAAO,GAAG,KAAK,GAAG,IAAI,EAAtB;AACD;;AA7CD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatMS = void 0;\nconst ONE_SECOND_AS_MS = 1000;\nconst ONE_MINUTE_AS_MS = 60 * ONE_SECOND_AS_MS;\nconst ONE_HOUR_AS_MS = 60 * ONE_MINUTE_AS_MS;\nfunction formatMS(ms, d, allowMicros = false, allowNanos = true) {\n    if (ms === 0 || ms === null)\n        return \"0\";\n    const bounds = [\n        ONE_HOUR_AS_MS,\n        ONE_MINUTE_AS_MS,\n        ONE_SECOND_AS_MS,\n        1,\n        0.001,\n        0.000001,\n    ];\n    const units = [\"hr\", \"min\", \"s\", \"ms\", \"μs\", \"ns\"];\n    const makeSmallNumbersNice = (f) => {\n        if (f >= 100)\n            return f.toFixed(0);\n        if (f >= 10)\n            return f.toFixed(1);\n        if (f === 0)\n            return \"0\";\n        return f.toFixed(2);\n    };\n    const bound = bounds.find((b) => b <= ms) || bounds[bounds.length - 1];\n    const boundIndex = bounds.indexOf(bound);\n    const unit = boundIndex >= 0 ? units[boundIndex] : \"\";\n    if ((unit === \"μs\" || unit === \"ns\") && !allowMicros) {\n        return \"< 1ms\";\n    }\n    if (unit === \"ns\" && !allowNanos) {\n        return \"< 1µs\";\n    }\n    const value = typeof d !== \"undefined\"\n        ? (ms / bound).toFixed(d)\n        : makeSmallNumbersNice(ms / bound);\n    if ((value === \"1000\" || value === \"1000.0\") && boundIndex >= 1) {\n        return `1${units[boundIndex - 1]}`;\n    }\n    return `${value}${unit}`;\n}\nexports.formatMS = formatMS;\n//# sourceMappingURL=format.js.map"]},"metadata":{},"sourceType":"script"}